// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ffi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LiveKit.Proto {

  /// <summary>Holder for reflection information generated from ffi.proto</summary>
  public static partial class FfiReflection {

    #region Descriptor
    /// <summary>File descriptor for ffi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FfiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglmZmkucHJvdG8SDWxpdmVraXQucHJvdG8aCmUyZWUucHJvdG8aC3RyYWNr",
            "LnByb3RvGgpyb29tLnByb3RvGhF2aWRlb19mcmFtZS5wcm90bxoRYXVkaW9f",
            "ZnJhbWUucHJvdG8inAwKCkZmaVJlcXVlc3QSMAoHZGlzcG9zZRgCIAEoCzId",
            "LmxpdmVraXQucHJvdG8uRGlzcG9zZVJlcXVlc3RIABIwCgdjb25uZWN0GAMg",
            "ASgLMh0ubGl2ZWtpdC5wcm90by5Db25uZWN0UmVxdWVzdEgAEjYKCmRpc2Nv",
            "bm5lY3QYBCABKAsyIC5saXZla2l0LnByb3RvLkRpc2Nvbm5lY3RSZXF1ZXN0",
            "SAASOwoNcHVibGlzaF90cmFjaxgFIAEoCzIiLmxpdmVraXQucHJvdG8uUHVi",
            "bGlzaFRyYWNrUmVxdWVzdEgAEj8KD3VucHVibGlzaF90cmFjaxgGIAEoCzIk",
            "LmxpdmVraXQucHJvdG8uVW5wdWJsaXNoVHJhY2tSZXF1ZXN0SAASOQoMcHVi",
            "bGlzaF9kYXRhGAcgASgLMiEubGl2ZWtpdC5wcm90by5QdWJsaXNoRGF0YVJl",
            "cXVlc3RIABI9Cg5zZXRfc3Vic2NyaWJlZBgIIAEoCzIjLmxpdmVraXQucHJv",
            "dG8uU2V0U3Vic2NyaWJlZFJlcXVlc3RIABJKChV1cGRhdGVfbG9jYWxfbWV0",
            "YWRhdGEYCSABKAsyKS5saXZla2l0LnByb3RvLlVwZGF0ZUxvY2FsTWV0YWRh",
            "dGFSZXF1ZXN0SAASQgoRdXBkYXRlX2xvY2FsX25hbWUYCiABKAsyJS5saXZl",
            "a2l0LnByb3RvLlVwZGF0ZUxvY2FsTmFtZVJlcXVlc3RIABJCChFnZXRfc2Vz",
            "c2lvbl9zdGF0cxgLIAEoCzIlLmxpdmVraXQucHJvdG8uR2V0U2Vzc2lvblN0",
            "YXRzUmVxdWVzdEgAEksKFXB1Ymxpc2hfdHJhbnNjcmlwdGlvbhgMIAEoCzIq",
            "LmxpdmVraXQucHJvdG8uUHVibGlzaFRyYW5zY3JpcHRpb25SZXF1ZXN0SAAS",
            "RAoSY3JlYXRlX3ZpZGVvX3RyYWNrGA0gASgLMiYubGl2ZWtpdC5wcm90by5D",
            "cmVhdGVWaWRlb1RyYWNrUmVxdWVzdEgAEkQKEmNyZWF0ZV9hdWRpb190cmFj",
            "axgOIAEoCzImLmxpdmVraXQucHJvdG8uQ3JlYXRlQXVkaW9UcmFja1JlcXVl",
            "c3RIABIzCglnZXRfc3RhdHMYDyABKAsyHi5saXZla2l0LnByb3RvLkdldFN0",
            "YXRzUmVxdWVzdEgAEkAKEG5ld192aWRlb19zdHJlYW0YECABKAsyJC5saXZl",
            "a2l0LnByb3RvLk5ld1ZpZGVvU3RyZWFtUmVxdWVzdEgAEkAKEG5ld192aWRl",
            "b19zb3VyY2UYESABKAsyJC5saXZla2l0LnByb3RvLk5ld1ZpZGVvU291cmNl",
            "UmVxdWVzdEgAEkYKE2NhcHR1cmVfdmlkZW9fZnJhbWUYEiABKAsyJy5saXZl",
            "a2l0LnByb3RvLkNhcHR1cmVWaWRlb0ZyYW1lUmVxdWVzdEgAEjsKDXZpZGVv",
            "X2NvbnZlcnQYEyABKAsyIi5saXZla2l0LnByb3RvLlZpZGVvQ29udmVydFJl",
            "cXVlc3RIABJAChBuZXdfYXVkaW9fc3RyZWFtGBYgASgLMiQubGl2ZWtpdC5w",
            "cm90by5OZXdBdWRpb1N0cmVhbVJlcXVlc3RIABJAChBuZXdfYXVkaW9fc291",
            "cmNlGBcgASgLMiQubGl2ZWtpdC5wcm90by5OZXdBdWRpb1NvdXJjZVJlcXVl",
            "c3RIABJGChNjYXB0dXJlX2F1ZGlvX2ZyYW1lGBggASgLMicubGl2ZWtpdC5w",
            "cm90by5DYXB0dXJlQXVkaW9GcmFtZVJlcXVlc3RIABJGChNuZXdfYXVkaW9f",
            "cmVzYW1wbGVyGBkgASgLMicubGl2ZWtpdC5wcm90by5OZXdBdWRpb1Jlc2Ft",
            "cGxlclJlcXVlc3RIABJEChJyZW1peF9hbmRfcmVzYW1wbGUYGiABKAsyJi5s",
            "aXZla2l0LnByb3RvLlJlbWl4QW5kUmVzYW1wbGVSZXF1ZXN0SAASKgoEZTJl",
            "ZRgbIAEoCzIaLmxpdmVraXQucHJvdG8uRTJlZVJlcXVlc3RIAEIJCgdtZXNz",
            "YWdlIrUMCgtGZmlSZXNwb25zZRIxCgdkaXNwb3NlGAIgASgLMh4ubGl2ZWtp",
            "dC5wcm90by5EaXNwb3NlUmVzcG9uc2VIABIxCgdjb25uZWN0GAMgASgLMh4u",
            "bGl2ZWtpdC5wcm90by5Db25uZWN0UmVzcG9uc2VIABI3CgpkaXNjb25uZWN0",
            "GAQgASgLMiEubGl2ZWtpdC5wcm90by5EaXNjb25uZWN0UmVzcG9uc2VIABI8",
            "Cg1wdWJsaXNoX3RyYWNrGAUgASgLMiMubGl2ZWtpdC5wcm90by5QdWJsaXNo",
            "VHJhY2tSZXNwb25zZUgAEkAKD3VucHVibGlzaF90cmFjaxgGIAEoCzIlLmxp",
            "dmVraXQucHJvdG8uVW5wdWJsaXNoVHJhY2tSZXNwb25zZUgAEjoKDHB1Ymxp",
            "c2hfZGF0YRgHIAEoCzIiLmxpdmVraXQucHJvdG8uUHVibGlzaERhdGFSZXNw",
            "b25zZUgAEj4KDnNldF9zdWJzY3JpYmVkGAggASgLMiQubGl2ZWtpdC5wcm90",
            "by5TZXRTdWJzY3JpYmVkUmVzcG9uc2VIABJLChV1cGRhdGVfbG9jYWxfbWV0",
            "YWRhdGEYCSABKAsyKi5saXZla2l0LnByb3RvLlVwZGF0ZUxvY2FsTWV0YWRh",
            "dGFSZXNwb25zZUgAEkMKEXVwZGF0ZV9sb2NhbF9uYW1lGAogASgLMiYubGl2",
            "ZWtpdC5wcm90by5VcGRhdGVMb2NhbE5hbWVSZXNwb25zZUgAEkMKEWdldF9z",
            "ZXNzaW9uX3N0YXRzGAsgASgLMiYubGl2ZWtpdC5wcm90by5HZXRTZXNzaW9u",
            "U3RhdHNSZXNwb25zZUgAEkwKFXB1Ymxpc2hfdHJhbnNjcmlwdGlvbhgMIAEo",
            "CzIrLmxpdmVraXQucHJvdG8uUHVibGlzaFRyYW5zY3JpcHRpb25SZXNwb25z",
            "ZUgAEkUKEmNyZWF0ZV92aWRlb190cmFjaxgNIAEoCzInLmxpdmVraXQucHJv",
            "dG8uQ3JlYXRlVmlkZW9UcmFja1Jlc3BvbnNlSAASRQoSY3JlYXRlX2F1ZGlv",
            "X3RyYWNrGA4gASgLMicubGl2ZWtpdC5wcm90by5DcmVhdGVBdWRpb1RyYWNr",
            "UmVzcG9uc2VIABI0CglnZXRfc3RhdHMYDyABKAsyHy5saXZla2l0LnByb3Rv",
            "LkdldFN0YXRzUmVzcG9uc2VIABJBChBuZXdfdmlkZW9fc3RyZWFtGBAgASgL",
            "MiUubGl2ZWtpdC5wcm90by5OZXdWaWRlb1N0cmVhbVJlc3BvbnNlSAASQQoQ",
            "bmV3X3ZpZGVvX3NvdXJjZRgRIAEoCzIlLmxpdmVraXQucHJvdG8uTmV3Vmlk",
            "ZW9Tb3VyY2VSZXNwb25zZUgAEkcKE2NhcHR1cmVfdmlkZW9fZnJhbWUYEiAB",
            "KAsyKC5saXZla2l0LnByb3RvLkNhcHR1cmVWaWRlb0ZyYW1lUmVzcG9uc2VI",
            "ABI8Cg12aWRlb19jb252ZXJ0GBMgASgLMiMubGl2ZWtpdC5wcm90by5WaWRl",
            "b0NvbnZlcnRSZXNwb25zZUgAEkEKEG5ld19hdWRpb19zdHJlYW0YFiABKAsy",
            "JS5saXZla2l0LnByb3RvLk5ld0F1ZGlvU3RyZWFtUmVzcG9uc2VIABJBChBu",
            "ZXdfYXVkaW9fc291cmNlGBcgASgLMiUubGl2ZWtpdC5wcm90by5OZXdBdWRp",
            "b1NvdXJjZVJlc3BvbnNlSAASRwoTY2FwdHVyZV9hdWRpb19mcmFtZRgYIAEo",
            "CzIoLmxpdmVraXQucHJvdG8uQ2FwdHVyZUF1ZGlvRnJhbWVSZXNwb25zZUgA",
            "EkcKE25ld19hdWRpb19yZXNhbXBsZXIYGSABKAsyKC5saXZla2l0LnByb3Rv",
            "Lk5ld0F1ZGlvUmVzYW1wbGVyUmVzcG9uc2VIABJFChJyZW1peF9hbmRfcmVz",
            "YW1wbGUYGiABKAsyJy5saXZla2l0LnByb3RvLlJlbWl4QW5kUmVzYW1wbGVS",
            "ZXNwb25zZUgAEisKBGUyZWUYGyABKAsyGy5saXZla2l0LnByb3RvLkUyZWVS",
            "ZXNwb25zZUgAQgkKB21lc3NhZ2UixAgKCEZmaUV2ZW50Ei4KCnJvb21fZXZl",
            "bnQYASABKAsyGC5saXZla2l0LnByb3RvLlJvb21FdmVudEgAEjAKC3RyYWNr",
            "X2V2ZW50GAIgASgLMhkubGl2ZWtpdC5wcm90by5UcmFja0V2ZW50SAASPQoS",
            "dmlkZW9fc3RyZWFtX2V2ZW50GAMgASgLMh8ubGl2ZWtpdC5wcm90by5WaWRl",
            "b1N0cmVhbUV2ZW50SAASPQoSYXVkaW9fc3RyZWFtX2V2ZW50GAQgASgLMh8u",
            "bGl2ZWtpdC5wcm90by5BdWRpb1N0cmVhbUV2ZW50SAASMQoHY29ubmVjdBgF",
            "IAEoCzIeLmxpdmVraXQucHJvdG8uQ29ubmVjdENhbGxiYWNrSAASNwoKZGlz",
            "Y29ubmVjdBgGIAEoCzIhLmxpdmVraXQucHJvdG8uRGlzY29ubmVjdENhbGxi",
            "YWNrSAASMQoHZGlzcG9zZRgHIAEoCzIeLmxpdmVraXQucHJvdG8uRGlzcG9z",
            "ZUNhbGxiYWNrSAASPAoNcHVibGlzaF90cmFjaxgIIAEoCzIjLmxpdmVraXQu",
            "cHJvdG8uUHVibGlzaFRyYWNrQ2FsbGJhY2tIABJACg91bnB1Ymxpc2hfdHJh",
            "Y2sYCSABKAsyJS5saXZla2l0LnByb3RvLlVucHVibGlzaFRyYWNrQ2FsbGJh",
            "Y2tIABI6CgxwdWJsaXNoX2RhdGEYCiABKAsyIi5saXZla2l0LnByb3RvLlB1",
            "Ymxpc2hEYXRhQ2FsbGJhY2tIABJMChVwdWJsaXNoX3RyYW5zY3JpcHRpb24Y",
            "CyABKAsyKy5saXZla2l0LnByb3RvLlB1Ymxpc2hUcmFuc2NyaXB0aW9uQ2Fs",
            "bGJhY2tIABJHChNjYXB0dXJlX2F1ZGlvX2ZyYW1lGAwgASgLMigubGl2ZWtp",
            "dC5wcm90by5DYXB0dXJlQXVkaW9GcmFtZUNhbGxiYWNrSAASSwoVdXBkYXRl",
            "X2xvY2FsX21ldGFkYXRhGA0gASgLMioubGl2ZWtpdC5wcm90by5VcGRhdGVM",
            "b2NhbE1ldGFkYXRhQ2FsbGJhY2tIABJDChF1cGRhdGVfbG9jYWxfbmFtZRgO",
            "IAEoCzImLmxpdmVraXQucHJvdG8uVXBkYXRlTG9jYWxOYW1lQ2FsbGJhY2tI",
            "ABI0CglnZXRfc3RhdHMYDyABKAsyHy5saXZla2l0LnByb3RvLkdldFN0YXRz",
            "Q2FsbGJhY2tIABInCgRsb2dzGBAgASgLMhcubGl2ZWtpdC5wcm90by5Mb2dC",
            "YXRjaEgAEkMKEWdldF9zZXNzaW9uX3N0YXRzGBEgASgLMiYubGl2ZWtpdC5w",
            "cm90by5HZXRTZXNzaW9uU3RhdHNDYWxsYmFja0gAEiUKBXBhbmljGBIgASgL",
            "MhQubGl2ZWtpdC5wcm90by5QYW5pY0gAQgkKB21lc3NhZ2UiHwoORGlzcG9z",
            "ZVJlcXVlc3QSDQoFYXN5bmMYASABKAgiNQoPRGlzcG9zZVJlc3BvbnNlEhUK",
            "CGFzeW5jX2lkGAEgASgESACIAQFCCwoJX2FzeW5jX2lkIiMKD0Rpc3Bvc2VD",
            "YWxsYmFjaxIQCghhc3luY19pZBgBIAEoBCK2AQoJTG9nUmVjb3JkEiYKBWxl",
            "dmVsGAEgASgOMhcubGl2ZWtpdC5wcm90by5Mb2dMZXZlbBIOCgZ0YXJnZXQY",
            "AiABKAkSGAoLbW9kdWxlX3BhdGgYAyABKAlIAIgBARIRCgRmaWxlGAQgASgJ",
            "SAGIAQESEQoEbGluZRgFIAEoDUgCiAEBEg8KB21lc3NhZ2UYBiABKAlCDgoM",
            "X21vZHVsZV9wYXRoQgcKBV9maWxlQgcKBV9saW5lIjUKCExvZ0JhdGNoEikK",
            "B3JlY29yZHMYASADKAsyGC5saXZla2l0LnByb3RvLkxvZ1JlY29yZCIYCgVQ",
            "YW5pYxIPCgdtZXNzYWdlGAEgASgJKlMKCExvZ0xldmVsEg0KCUxPR19FUlJP",
            "UhAAEgwKCExPR19XQVJOEAESDAoITE9HX0lORk8QAhINCglMT0dfREVCVUcQ",
            "AxINCglMT0dfVFJBQ0UQBEIQqgINTGl2ZUtpdC5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LiveKit.Proto.E2EeReflection.Descriptor, global::LiveKit.Proto.TrackReflection.Descriptor, global::LiveKit.Proto.RoomReflection.Descriptor, global::LiveKit.Proto.VideoFrameReflection.Descriptor, global::LiveKit.Proto.AudioFrameReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LiveKit.Proto.LogLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FfiRequest), global::LiveKit.Proto.FfiRequest.Parser, new[]{ "Dispose", "Connect", "Disconnect", "PublishTrack", "UnpublishTrack", "PublishData", "SetSubscribed", "UpdateLocalMetadata", "UpdateLocalName", "GetSessionStats", "PublishTranscription", "CreateVideoTrack", "CreateAudioTrack", "GetStats", "NewVideoStream", "NewVideoSource", "CaptureVideoFrame", "VideoConvert", "NewAudioStream", "NewAudioSource", "CaptureAudioFrame", "NewAudioResampler", "RemixAndResample", "E2Ee" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FfiResponse), global::LiveKit.Proto.FfiResponse.Parser, new[]{ "Dispose", "Connect", "Disconnect", "PublishTrack", "UnpublishTrack", "PublishData", "SetSubscribed", "UpdateLocalMetadata", "UpdateLocalName", "GetSessionStats", "PublishTranscription", "CreateVideoTrack", "CreateAudioTrack", "GetStats", "NewVideoStream", "NewVideoSource", "CaptureVideoFrame", "VideoConvert", "NewAudioStream", "NewAudioSource", "CaptureAudioFrame", "NewAudioResampler", "RemixAndResample", "E2Ee" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FfiEvent), global::LiveKit.Proto.FfiEvent.Parser, new[]{ "RoomEvent", "TrackEvent", "VideoStreamEvent", "AudioStreamEvent", "Connect", "Disconnect", "Dispose", "PublishTrack", "UnpublishTrack", "PublishData", "PublishTranscription", "CaptureAudioFrame", "UpdateLocalMetadata", "UpdateLocalName", "GetStats", "Logs", "GetSessionStats", "Panic" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeRequest), global::LiveKit.Proto.DisposeRequest.Parser, new[]{ "Async" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeResponse), global::LiveKit.Proto.DisposeResponse.Parser, new[]{ "AsyncId" }, new[]{ "AsyncId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeCallback), global::LiveKit.Proto.DisposeCallback.Parser, new[]{ "AsyncId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.LogRecord), global::LiveKit.Proto.LogRecord.Parser, new[]{ "Level", "Target", "ModulePath", "File", "Line", "Message" }, new[]{ "ModulePath", "File", "Line" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.LogBatch), global::LiveKit.Proto.LogBatch.Parser, new[]{ "Records" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.Panic), global::LiveKit.Proto.Panic.Parser, new[]{ "Message" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LogLevel {
    [pbr::OriginalName("LOG_ERROR")] LogError = 0,
    [pbr::OriginalName("LOG_WARN")] LogWarn = 1,
    [pbr::OriginalName("LOG_INFO")] LogInfo = 2,
    [pbr::OriginalName("LOG_DEBUG")] LogDebug = 3,
    [pbr::OriginalName("LOG_TRACE")] LogTrace = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// This is the input of livekit_ffi_request function
  /// We always expect a response (FFIResponse, even if it's empty)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FfiRequest : pb::IMessage<FfiRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FfiRequest> _parser = new pb::MessageParser<FfiRequest>(() => new FfiRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FfiRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiRequest(FfiRequest other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.PublishData:
          PublishData = other.PublishData.Clone();
          break;
        case MessageOneofCase.SetSubscribed:
          SetSubscribed = other.SetSubscribed.Clone();
          break;
        case MessageOneofCase.UpdateLocalMetadata:
          UpdateLocalMetadata = other.UpdateLocalMetadata.Clone();
          break;
        case MessageOneofCase.UpdateLocalName:
          UpdateLocalName = other.UpdateLocalName.Clone();
          break;
        case MessageOneofCase.GetSessionStats:
          GetSessionStats = other.GetSessionStats.Clone();
          break;
        case MessageOneofCase.PublishTranscription:
          PublishTranscription = other.PublishTranscription.Clone();
          break;
        case MessageOneofCase.CreateVideoTrack:
          CreateVideoTrack = other.CreateVideoTrack.Clone();
          break;
        case MessageOneofCase.CreateAudioTrack:
          CreateAudioTrack = other.CreateAudioTrack.Clone();
          break;
        case MessageOneofCase.GetStats:
          GetStats = other.GetStats.Clone();
          break;
        case MessageOneofCase.NewVideoStream:
          NewVideoStream = other.NewVideoStream.Clone();
          break;
        case MessageOneofCase.NewVideoSource:
          NewVideoSource = other.NewVideoSource.Clone();
          break;
        case MessageOneofCase.CaptureVideoFrame:
          CaptureVideoFrame = other.CaptureVideoFrame.Clone();
          break;
        case MessageOneofCase.VideoConvert:
          VideoConvert = other.VideoConvert.Clone();
          break;
        case MessageOneofCase.NewAudioStream:
          NewAudioStream = other.NewAudioStream.Clone();
          break;
        case MessageOneofCase.NewAudioSource:
          NewAudioSource = other.NewAudioSource.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.NewAudioResampler:
          NewAudioResampler = other.NewAudioResampler.Clone();
          break;
        case MessageOneofCase.RemixAndResample:
          RemixAndResample = other.RemixAndResample.Clone();
          break;
        case MessageOneofCase.E2Ee:
          E2Ee = other.E2Ee.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiRequest Clone() {
      return new FfiRequest(this);
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeRequest Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 3;
    /// <summary>
    /// Room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectRequest Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectRequest Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackRequest PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackRequest UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "publish_data" field.</summary>
    public const int PublishDataFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishDataRequest PublishData {
      get { return messageCase_ == MessageOneofCase.PublishData ? (global::LiveKit.Proto.PublishDataRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishData;
      }
    }

    /// <summary>Field number for the "set_subscribed" field.</summary>
    public const int SetSubscribedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetSubscribedRequest SetSubscribed {
      get { return messageCase_ == MessageOneofCase.SetSubscribed ? (global::LiveKit.Proto.SetSubscribedRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetSubscribed;
      }
    }

    /// <summary>Field number for the "update_local_metadata" field.</summary>
    public const int UpdateLocalMetadataFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UpdateLocalMetadataRequest UpdateLocalMetadata {
      get { return messageCase_ == MessageOneofCase.UpdateLocalMetadata ? (global::LiveKit.Proto.UpdateLocalMetadataRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateLocalMetadata;
      }
    }

    /// <summary>Field number for the "update_local_name" field.</summary>
    public const int UpdateLocalNameFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UpdateLocalNameRequest UpdateLocalName {
      get { return messageCase_ == MessageOneofCase.UpdateLocalName ? (global::LiveKit.Proto.UpdateLocalNameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateLocalName;
      }
    }

    /// <summary>Field number for the "get_session_stats" field.</summary>
    public const int GetSessionStatsFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetSessionStatsRequest GetSessionStats {
      get { return messageCase_ == MessageOneofCase.GetSessionStats ? (global::LiveKit.Proto.GetSessionStatsRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetSessionStats;
      }
    }

    /// <summary>Field number for the "publish_transcription" field.</summary>
    public const int PublishTranscriptionFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTranscriptionRequest PublishTranscription {
      get { return messageCase_ == MessageOneofCase.PublishTranscription ? (global::LiveKit.Proto.PublishTranscriptionRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTranscription;
      }
    }

    /// <summary>Field number for the "create_video_track" field.</summary>
    public const int CreateVideoTrackFieldNumber = 13;
    /// <summary>
    /// Track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateVideoTrackRequest CreateVideoTrack {
      get { return messageCase_ == MessageOneofCase.CreateVideoTrack ? (global::LiveKit.Proto.CreateVideoTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateVideoTrack;
      }
    }

    /// <summary>Field number for the "create_audio_track" field.</summary>
    public const int CreateAudioTrackFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateAudioTrackRequest CreateAudioTrack {
      get { return messageCase_ == MessageOneofCase.CreateAudioTrack ? (global::LiveKit.Proto.CreateAudioTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateAudioTrack;
      }
    }

    /// <summary>Field number for the "get_stats" field.</summary>
    public const int GetStatsFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetStatsRequest GetStats {
      get { return messageCase_ == MessageOneofCase.GetStats ? (global::LiveKit.Proto.GetStatsRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetStats;
      }
    }

    /// <summary>Field number for the "new_video_stream" field.</summary>
    public const int NewVideoStreamFieldNumber = 16;
    /// <summary>
    /// Video
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoStreamRequest NewVideoStream {
      get { return messageCase_ == MessageOneofCase.NewVideoStream ? (global::LiveKit.Proto.NewVideoStreamRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoStream;
      }
    }

    /// <summary>Field number for the "new_video_source" field.</summary>
    public const int NewVideoSourceFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoSourceRequest NewVideoSource {
      get { return messageCase_ == MessageOneofCase.NewVideoSource ? (global::LiveKit.Proto.NewVideoSourceRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoSource;
      }
    }

    /// <summary>Field number for the "capture_video_frame" field.</summary>
    public const int CaptureVideoFrameFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureVideoFrameRequest CaptureVideoFrame {
      get { return messageCase_ == MessageOneofCase.CaptureVideoFrame ? (global::LiveKit.Proto.CaptureVideoFrameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureVideoFrame;
      }
    }

    /// <summary>Field number for the "video_convert" field.</summary>
    public const int VideoConvertFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoConvertRequest VideoConvert {
      get { return messageCase_ == MessageOneofCase.VideoConvert ? (global::LiveKit.Proto.VideoConvertRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoConvert;
      }
    }

    /// <summary>Field number for the "new_audio_stream" field.</summary>
    public const int NewAudioStreamFieldNumber = 22;
    /// <summary>
    /// Audio
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioStreamRequest NewAudioStream {
      get { return messageCase_ == MessageOneofCase.NewAudioStream ? (global::LiveKit.Proto.NewAudioStreamRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioStream;
      }
    }

    /// <summary>Field number for the "new_audio_source" field.</summary>
    public const int NewAudioSourceFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioSourceRequest NewAudioSource {
      get { return messageCase_ == MessageOneofCase.NewAudioSource ? (global::LiveKit.Proto.NewAudioSourceRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioSource;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameRequest CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "new_audio_resampler" field.</summary>
    public const int NewAudioResamplerFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioResamplerRequest NewAudioResampler {
      get { return messageCase_ == MessageOneofCase.NewAudioResampler ? (global::LiveKit.Proto.NewAudioResamplerRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioResampler;
      }
    }

    /// <summary>Field number for the "remix_and_resample" field.</summary>
    public const int RemixAndResampleFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RemixAndResampleRequest RemixAndResample {
      get { return messageCase_ == MessageOneofCase.RemixAndResample ? (global::LiveKit.Proto.RemixAndResampleRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RemixAndResample;
      }
    }

    /// <summary>Field number for the "e2ee" field.</summary>
    public const int E2EeFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.E2eeRequest E2Ee {
      get { return messageCase_ == MessageOneofCase.E2Ee ? (global::LiveKit.Proto.E2eeRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.E2Ee;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Dispose = 2,
      Connect = 3,
      Disconnect = 4,
      PublishTrack = 5,
      UnpublishTrack = 6,
      PublishData = 7,
      SetSubscribed = 8,
      UpdateLocalMetadata = 9,
      UpdateLocalName = 10,
      GetSessionStats = 11,
      PublishTranscription = 12,
      CreateVideoTrack = 13,
      CreateAudioTrack = 14,
      GetStats = 15,
      NewVideoStream = 16,
      NewVideoSource = 17,
      CaptureVideoFrame = 18,
      VideoConvert = 19,
      NewAudioStream = 22,
      NewAudioSource = 23,
      CaptureAudioFrame = 24,
      NewAudioResampler = 25,
      RemixAndResample = 26,
      E2Ee = 27,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FfiRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FfiRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(PublishData, other.PublishData)) return false;
      if (!object.Equals(SetSubscribed, other.SetSubscribed)) return false;
      if (!object.Equals(UpdateLocalMetadata, other.UpdateLocalMetadata)) return false;
      if (!object.Equals(UpdateLocalName, other.UpdateLocalName)) return false;
      if (!object.Equals(GetSessionStats, other.GetSessionStats)) return false;
      if (!object.Equals(PublishTranscription, other.PublishTranscription)) return false;
      if (!object.Equals(CreateVideoTrack, other.CreateVideoTrack)) return false;
      if (!object.Equals(CreateAudioTrack, other.CreateAudioTrack)) return false;
      if (!object.Equals(GetStats, other.GetStats)) return false;
      if (!object.Equals(NewVideoStream, other.NewVideoStream)) return false;
      if (!object.Equals(NewVideoSource, other.NewVideoSource)) return false;
      if (!object.Equals(CaptureVideoFrame, other.CaptureVideoFrame)) return false;
      if (!object.Equals(VideoConvert, other.VideoConvert)) return false;
      if (!object.Equals(NewAudioStream, other.NewAudioStream)) return false;
      if (!object.Equals(NewAudioSource, other.NewAudioSource)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(NewAudioResampler, other.NewAudioResampler)) return false;
      if (!object.Equals(RemixAndResample, other.RemixAndResample)) return false;
      if (!object.Equals(E2Ee, other.E2Ee)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishData) hash ^= PublishData.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetSubscribed) hash ^= SetSubscribed.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) hash ^= UpdateLocalMetadata.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateLocalName) hash ^= UpdateLocalName.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetSessionStats) hash ^= GetSessionStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTranscription) hash ^= PublishTranscription.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) hash ^= CreateVideoTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) hash ^= CreateAudioTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetStats) hash ^= GetStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoStream) hash ^= NewVideoStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoSource) hash ^= NewVideoSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) hash ^= CaptureVideoFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoConvert) hash ^= VideoConvert.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioStream) hash ^= NewAudioStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioSource) hash ^= NewAudioSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioResampler) hash ^= NewAudioResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.RemixAndResample) hash ^= RemixAndResample.GetHashCode();
      if (messageCase_ == MessageOneofCase.E2Ee) hash ^= E2Ee.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(90);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(114);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(122);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(E2Ee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(90);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(114);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(122);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(E2Ee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(E2Ee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FfiRequest other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeRequest();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectRequest();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectRequest();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackRequest();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackRequest();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.PublishData:
          if (PublishData == null) {
            PublishData = new global::LiveKit.Proto.PublishDataRequest();
          }
          PublishData.MergeFrom(other.PublishData);
          break;
        case MessageOneofCase.SetSubscribed:
          if (SetSubscribed == null) {
            SetSubscribed = new global::LiveKit.Proto.SetSubscribedRequest();
          }
          SetSubscribed.MergeFrom(other.SetSubscribed);
          break;
        case MessageOneofCase.UpdateLocalMetadata:
          if (UpdateLocalMetadata == null) {
            UpdateLocalMetadata = new global::LiveKit.Proto.UpdateLocalMetadataRequest();
          }
          UpdateLocalMetadata.MergeFrom(other.UpdateLocalMetadata);
          break;
        case MessageOneofCase.UpdateLocalName:
          if (UpdateLocalName == null) {
            UpdateLocalName = new global::LiveKit.Proto.UpdateLocalNameRequest();
          }
          UpdateLocalName.MergeFrom(other.UpdateLocalName);
          break;
        case MessageOneofCase.GetSessionStats:
          if (GetSessionStats == null) {
            GetSessionStats = new global::LiveKit.Proto.GetSessionStatsRequest();
          }
          GetSessionStats.MergeFrom(other.GetSessionStats);
          break;
        case MessageOneofCase.PublishTranscription:
          if (PublishTranscription == null) {
            PublishTranscription = new global::LiveKit.Proto.PublishTranscriptionRequest();
          }
          PublishTranscription.MergeFrom(other.PublishTranscription);
          break;
        case MessageOneofCase.CreateVideoTrack:
          if (CreateVideoTrack == null) {
            CreateVideoTrack = new global::LiveKit.Proto.CreateVideoTrackRequest();
          }
          CreateVideoTrack.MergeFrom(other.CreateVideoTrack);
          break;
        case MessageOneofCase.CreateAudioTrack:
          if (CreateAudioTrack == null) {
            CreateAudioTrack = new global::LiveKit.Proto.CreateAudioTrackRequest();
          }
          CreateAudioTrack.MergeFrom(other.CreateAudioTrack);
          break;
        case MessageOneofCase.GetStats:
          if (GetStats == null) {
            GetStats = new global::LiveKit.Proto.GetStatsRequest();
          }
          GetStats.MergeFrom(other.GetStats);
          break;
        case MessageOneofCase.NewVideoStream:
          if (NewVideoStream == null) {
            NewVideoStream = new global::LiveKit.Proto.NewVideoStreamRequest();
          }
          NewVideoStream.MergeFrom(other.NewVideoStream);
          break;
        case MessageOneofCase.NewVideoSource:
          if (NewVideoSource == null) {
            NewVideoSource = new global::LiveKit.Proto.NewVideoSourceRequest();
          }
          NewVideoSource.MergeFrom(other.NewVideoSource);
          break;
        case MessageOneofCase.CaptureVideoFrame:
          if (CaptureVideoFrame == null) {
            CaptureVideoFrame = new global::LiveKit.Proto.CaptureVideoFrameRequest();
          }
          CaptureVideoFrame.MergeFrom(other.CaptureVideoFrame);
          break;
        case MessageOneofCase.VideoConvert:
          if (VideoConvert == null) {
            VideoConvert = new global::LiveKit.Proto.VideoConvertRequest();
          }
          VideoConvert.MergeFrom(other.VideoConvert);
          break;
        case MessageOneofCase.NewAudioStream:
          if (NewAudioStream == null) {
            NewAudioStream = new global::LiveKit.Proto.NewAudioStreamRequest();
          }
          NewAudioStream.MergeFrom(other.NewAudioStream);
          break;
        case MessageOneofCase.NewAudioSource:
          if (NewAudioSource == null) {
            NewAudioSource = new global::LiveKit.Proto.NewAudioSourceRequest();
          }
          NewAudioSource.MergeFrom(other.NewAudioSource);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameRequest();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.NewAudioResampler:
          if (NewAudioResampler == null) {
            NewAudioResampler = new global::LiveKit.Proto.NewAudioResamplerRequest();
          }
          NewAudioResampler.MergeFrom(other.NewAudioResampler);
          break;
        case MessageOneofCase.RemixAndResample:
          if (RemixAndResample == null) {
            RemixAndResample = new global::LiveKit.Proto.RemixAndResampleRequest();
          }
          RemixAndResample.MergeFrom(other.RemixAndResample);
          break;
        case MessageOneofCase.E2Ee:
          if (E2Ee == null) {
            E2Ee = new global::LiveKit.Proto.E2eeRequest();
          }
          E2Ee.MergeFrom(other.E2Ee);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeRequest subBuilder = new global::LiveKit.Proto.DisposeRequest();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectRequest subBuilder = new global::LiveKit.Proto.ConnectRequest();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectRequest subBuilder = new global::LiveKit.Proto.DisconnectRequest();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackRequest subBuilder = new global::LiveKit.Proto.PublishTrackRequest();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackRequest subBuilder = new global::LiveKit.Proto.UnpublishTrackRequest();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataRequest subBuilder = new global::LiveKit.Proto.PublishDataRequest();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedRequest subBuilder = new global::LiveKit.Proto.SetSubscribedRequest();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.UpdateLocalMetadataRequest subBuilder = new global::LiveKit.Proto.UpdateLocalMetadataRequest();
            if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
              subBuilder.MergeFrom(UpdateLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.UpdateLocalNameRequest subBuilder = new global::LiveKit.Proto.UpdateLocalNameRequest();
            if (messageCase_ == MessageOneofCase.UpdateLocalName) {
              subBuilder.MergeFrom(UpdateLocalName);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.GetSessionStatsRequest subBuilder = new global::LiveKit.Proto.GetSessionStatsRequest();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.PublishTranscriptionRequest subBuilder = new global::LiveKit.Proto.PublishTranscriptionRequest();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.CreateVideoTrackRequest subBuilder = new global::LiveKit.Proto.CreateVideoTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.CreateAudioTrackRequest subBuilder = new global::LiveKit.Proto.CreateAudioTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.GetStatsRequest subBuilder = new global::LiveKit.Proto.GetStatsRequest();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewVideoStreamRequest subBuilder = new global::LiveKit.Proto.NewVideoStreamRequest();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewVideoSourceRequest subBuilder = new global::LiveKit.Proto.NewVideoSourceRequest();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureVideoFrameRequest subBuilder = new global::LiveKit.Proto.CaptureVideoFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.VideoConvertRequest subBuilder = new global::LiveKit.Proto.VideoConvertRequest();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.NewAudioStreamRequest subBuilder = new global::LiveKit.Proto.NewAudioStreamRequest();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.NewAudioSourceRequest subBuilder = new global::LiveKit.Proto.NewAudioSourceRequest();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.CaptureAudioFrameRequest subBuilder = new global::LiveKit.Proto.CaptureAudioFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioResamplerRequest subBuilder = new global::LiveKit.Proto.NewAudioResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.RemixAndResampleRequest subBuilder = new global::LiveKit.Proto.RemixAndResampleRequest();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.E2eeRequest subBuilder = new global::LiveKit.Proto.E2eeRequest();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeRequest subBuilder = new global::LiveKit.Proto.DisposeRequest();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectRequest subBuilder = new global::LiveKit.Proto.ConnectRequest();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectRequest subBuilder = new global::LiveKit.Proto.DisconnectRequest();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackRequest subBuilder = new global::LiveKit.Proto.PublishTrackRequest();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackRequest subBuilder = new global::LiveKit.Proto.UnpublishTrackRequest();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataRequest subBuilder = new global::LiveKit.Proto.PublishDataRequest();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedRequest subBuilder = new global::LiveKit.Proto.SetSubscribedRequest();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.UpdateLocalMetadataRequest subBuilder = new global::LiveKit.Proto.UpdateLocalMetadataRequest();
            if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
              subBuilder.MergeFrom(UpdateLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.UpdateLocalNameRequest subBuilder = new global::LiveKit.Proto.UpdateLocalNameRequest();
            if (messageCase_ == MessageOneofCase.UpdateLocalName) {
              subBuilder.MergeFrom(UpdateLocalName);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.GetSessionStatsRequest subBuilder = new global::LiveKit.Proto.GetSessionStatsRequest();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.PublishTranscriptionRequest subBuilder = new global::LiveKit.Proto.PublishTranscriptionRequest();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.CreateVideoTrackRequest subBuilder = new global::LiveKit.Proto.CreateVideoTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.CreateAudioTrackRequest subBuilder = new global::LiveKit.Proto.CreateAudioTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.GetStatsRequest subBuilder = new global::LiveKit.Proto.GetStatsRequest();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewVideoStreamRequest subBuilder = new global::LiveKit.Proto.NewVideoStreamRequest();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewVideoSourceRequest subBuilder = new global::LiveKit.Proto.NewVideoSourceRequest();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureVideoFrameRequest subBuilder = new global::LiveKit.Proto.CaptureVideoFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.VideoConvertRequest subBuilder = new global::LiveKit.Proto.VideoConvertRequest();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.NewAudioStreamRequest subBuilder = new global::LiveKit.Proto.NewAudioStreamRequest();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.NewAudioSourceRequest subBuilder = new global::LiveKit.Proto.NewAudioSourceRequest();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.CaptureAudioFrameRequest subBuilder = new global::LiveKit.Proto.CaptureAudioFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioResamplerRequest subBuilder = new global::LiveKit.Proto.NewAudioResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.RemixAndResampleRequest subBuilder = new global::LiveKit.Proto.RemixAndResampleRequest();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.E2eeRequest subBuilder = new global::LiveKit.Proto.E2eeRequest();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This is the output of livekit_ffi_request function.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FfiResponse : pb::IMessage<FfiResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FfiResponse> _parser = new pb::MessageParser<FfiResponse>(() => new FfiResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FfiResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiResponse(FfiResponse other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.PublishData:
          PublishData = other.PublishData.Clone();
          break;
        case MessageOneofCase.SetSubscribed:
          SetSubscribed = other.SetSubscribed.Clone();
          break;
        case MessageOneofCase.UpdateLocalMetadata:
          UpdateLocalMetadata = other.UpdateLocalMetadata.Clone();
          break;
        case MessageOneofCase.UpdateLocalName:
          UpdateLocalName = other.UpdateLocalName.Clone();
          break;
        case MessageOneofCase.GetSessionStats:
          GetSessionStats = other.GetSessionStats.Clone();
          break;
        case MessageOneofCase.PublishTranscription:
          PublishTranscription = other.PublishTranscription.Clone();
          break;
        case MessageOneofCase.CreateVideoTrack:
          CreateVideoTrack = other.CreateVideoTrack.Clone();
          break;
        case MessageOneofCase.CreateAudioTrack:
          CreateAudioTrack = other.CreateAudioTrack.Clone();
          break;
        case MessageOneofCase.GetStats:
          GetStats = other.GetStats.Clone();
          break;
        case MessageOneofCase.NewVideoStream:
          NewVideoStream = other.NewVideoStream.Clone();
          break;
        case MessageOneofCase.NewVideoSource:
          NewVideoSource = other.NewVideoSource.Clone();
          break;
        case MessageOneofCase.CaptureVideoFrame:
          CaptureVideoFrame = other.CaptureVideoFrame.Clone();
          break;
        case MessageOneofCase.VideoConvert:
          VideoConvert = other.VideoConvert.Clone();
          break;
        case MessageOneofCase.NewAudioStream:
          NewAudioStream = other.NewAudioStream.Clone();
          break;
        case MessageOneofCase.NewAudioSource:
          NewAudioSource = other.NewAudioSource.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.NewAudioResampler:
          NewAudioResampler = other.NewAudioResampler.Clone();
          break;
        case MessageOneofCase.RemixAndResample:
          RemixAndResample = other.RemixAndResample.Clone();
          break;
        case MessageOneofCase.E2Ee:
          E2Ee = other.E2Ee.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiResponse Clone() {
      return new FfiResponse(this);
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeResponse Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 3;
    /// <summary>
    /// Room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectResponse Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectResponse Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackResponse PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackResponse UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "publish_data" field.</summary>
    public const int PublishDataFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishDataResponse PublishData {
      get { return messageCase_ == MessageOneofCase.PublishData ? (global::LiveKit.Proto.PublishDataResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishData;
      }
    }

    /// <summary>Field number for the "set_subscribed" field.</summary>
    public const int SetSubscribedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.SetSubscribedResponse SetSubscribed {
      get { return messageCase_ == MessageOneofCase.SetSubscribed ? (global::LiveKit.Proto.SetSubscribedResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SetSubscribed;
      }
    }

    /// <summary>Field number for the "update_local_metadata" field.</summary>
    public const int UpdateLocalMetadataFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UpdateLocalMetadataResponse UpdateLocalMetadata {
      get { return messageCase_ == MessageOneofCase.UpdateLocalMetadata ? (global::LiveKit.Proto.UpdateLocalMetadataResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateLocalMetadata;
      }
    }

    /// <summary>Field number for the "update_local_name" field.</summary>
    public const int UpdateLocalNameFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UpdateLocalNameResponse UpdateLocalName {
      get { return messageCase_ == MessageOneofCase.UpdateLocalName ? (global::LiveKit.Proto.UpdateLocalNameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateLocalName;
      }
    }

    /// <summary>Field number for the "get_session_stats" field.</summary>
    public const int GetSessionStatsFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetSessionStatsResponse GetSessionStats {
      get { return messageCase_ == MessageOneofCase.GetSessionStats ? (global::LiveKit.Proto.GetSessionStatsResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetSessionStats;
      }
    }

    /// <summary>Field number for the "publish_transcription" field.</summary>
    public const int PublishTranscriptionFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTranscriptionResponse PublishTranscription {
      get { return messageCase_ == MessageOneofCase.PublishTranscription ? (global::LiveKit.Proto.PublishTranscriptionResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTranscription;
      }
    }

    /// <summary>Field number for the "create_video_track" field.</summary>
    public const int CreateVideoTrackFieldNumber = 13;
    /// <summary>
    /// Track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateVideoTrackResponse CreateVideoTrack {
      get { return messageCase_ == MessageOneofCase.CreateVideoTrack ? (global::LiveKit.Proto.CreateVideoTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateVideoTrack;
      }
    }

    /// <summary>Field number for the "create_audio_track" field.</summary>
    public const int CreateAudioTrackFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateAudioTrackResponse CreateAudioTrack {
      get { return messageCase_ == MessageOneofCase.CreateAudioTrack ? (global::LiveKit.Proto.CreateAudioTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateAudioTrack;
      }
    }

    /// <summary>Field number for the "get_stats" field.</summary>
    public const int GetStatsFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetStatsResponse GetStats {
      get { return messageCase_ == MessageOneofCase.GetStats ? (global::LiveKit.Proto.GetStatsResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetStats;
      }
    }

    /// <summary>Field number for the "new_video_stream" field.</summary>
    public const int NewVideoStreamFieldNumber = 16;
    /// <summary>
    /// Video
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoStreamResponse NewVideoStream {
      get { return messageCase_ == MessageOneofCase.NewVideoStream ? (global::LiveKit.Proto.NewVideoStreamResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoStream;
      }
    }

    /// <summary>Field number for the "new_video_source" field.</summary>
    public const int NewVideoSourceFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoSourceResponse NewVideoSource {
      get { return messageCase_ == MessageOneofCase.NewVideoSource ? (global::LiveKit.Proto.NewVideoSourceResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoSource;
      }
    }

    /// <summary>Field number for the "capture_video_frame" field.</summary>
    public const int CaptureVideoFrameFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureVideoFrameResponse CaptureVideoFrame {
      get { return messageCase_ == MessageOneofCase.CaptureVideoFrame ? (global::LiveKit.Proto.CaptureVideoFrameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureVideoFrame;
      }
    }

    /// <summary>Field number for the "video_convert" field.</summary>
    public const int VideoConvertFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoConvertResponse VideoConvert {
      get { return messageCase_ == MessageOneofCase.VideoConvert ? (global::LiveKit.Proto.VideoConvertResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoConvert;
      }
    }

    /// <summary>Field number for the "new_audio_stream" field.</summary>
    public const int NewAudioStreamFieldNumber = 22;
    /// <summary>
    /// Audio
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioStreamResponse NewAudioStream {
      get { return messageCase_ == MessageOneofCase.NewAudioStream ? (global::LiveKit.Proto.NewAudioStreamResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioStream;
      }
    }

    /// <summary>Field number for the "new_audio_source" field.</summary>
    public const int NewAudioSourceFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioSourceResponse NewAudioSource {
      get { return messageCase_ == MessageOneofCase.NewAudioSource ? (global::LiveKit.Proto.NewAudioSourceResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioSource;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameResponse CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "new_audio_resampler" field.</summary>
    public const int NewAudioResamplerFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioResamplerResponse NewAudioResampler {
      get { return messageCase_ == MessageOneofCase.NewAudioResampler ? (global::LiveKit.Proto.NewAudioResamplerResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioResampler;
      }
    }

    /// <summary>Field number for the "remix_and_resample" field.</summary>
    public const int RemixAndResampleFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RemixAndResampleResponse RemixAndResample {
      get { return messageCase_ == MessageOneofCase.RemixAndResample ? (global::LiveKit.Proto.RemixAndResampleResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RemixAndResample;
      }
    }

    /// <summary>Field number for the "e2ee" field.</summary>
    public const int E2EeFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.E2eeResponse E2Ee {
      get { return messageCase_ == MessageOneofCase.E2Ee ? (global::LiveKit.Proto.E2eeResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.E2Ee;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Dispose = 2,
      Connect = 3,
      Disconnect = 4,
      PublishTrack = 5,
      UnpublishTrack = 6,
      PublishData = 7,
      SetSubscribed = 8,
      UpdateLocalMetadata = 9,
      UpdateLocalName = 10,
      GetSessionStats = 11,
      PublishTranscription = 12,
      CreateVideoTrack = 13,
      CreateAudioTrack = 14,
      GetStats = 15,
      NewVideoStream = 16,
      NewVideoSource = 17,
      CaptureVideoFrame = 18,
      VideoConvert = 19,
      NewAudioStream = 22,
      NewAudioSource = 23,
      CaptureAudioFrame = 24,
      NewAudioResampler = 25,
      RemixAndResample = 26,
      E2Ee = 27,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FfiResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FfiResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(PublishData, other.PublishData)) return false;
      if (!object.Equals(SetSubscribed, other.SetSubscribed)) return false;
      if (!object.Equals(UpdateLocalMetadata, other.UpdateLocalMetadata)) return false;
      if (!object.Equals(UpdateLocalName, other.UpdateLocalName)) return false;
      if (!object.Equals(GetSessionStats, other.GetSessionStats)) return false;
      if (!object.Equals(PublishTranscription, other.PublishTranscription)) return false;
      if (!object.Equals(CreateVideoTrack, other.CreateVideoTrack)) return false;
      if (!object.Equals(CreateAudioTrack, other.CreateAudioTrack)) return false;
      if (!object.Equals(GetStats, other.GetStats)) return false;
      if (!object.Equals(NewVideoStream, other.NewVideoStream)) return false;
      if (!object.Equals(NewVideoSource, other.NewVideoSource)) return false;
      if (!object.Equals(CaptureVideoFrame, other.CaptureVideoFrame)) return false;
      if (!object.Equals(VideoConvert, other.VideoConvert)) return false;
      if (!object.Equals(NewAudioStream, other.NewAudioStream)) return false;
      if (!object.Equals(NewAudioSource, other.NewAudioSource)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(NewAudioResampler, other.NewAudioResampler)) return false;
      if (!object.Equals(RemixAndResample, other.RemixAndResample)) return false;
      if (!object.Equals(E2Ee, other.E2Ee)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishData) hash ^= PublishData.GetHashCode();
      if (messageCase_ == MessageOneofCase.SetSubscribed) hash ^= SetSubscribed.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) hash ^= UpdateLocalMetadata.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateLocalName) hash ^= UpdateLocalName.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetSessionStats) hash ^= GetSessionStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTranscription) hash ^= PublishTranscription.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) hash ^= CreateVideoTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) hash ^= CreateAudioTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetStats) hash ^= GetStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoStream) hash ^= NewVideoStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoSource) hash ^= NewVideoSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) hash ^= CaptureVideoFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoConvert) hash ^= VideoConvert.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioStream) hash ^= NewAudioStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioSource) hash ^= NewAudioSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioResampler) hash ^= NewAudioResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.RemixAndResample) hash ^= RemixAndResample.GetHashCode();
      if (messageCase_ == MessageOneofCase.E2Ee) hash ^= E2Ee.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(90);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(114);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(122);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(E2Ee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(58);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        output.WriteRawTag(66);
        output.WriteMessage(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        output.WriteRawTag(74);
        output.WriteMessage(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(90);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(114);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(122);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(E2Ee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishData);
      }
      if (messageCase_ == MessageOneofCase.SetSubscribed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetSubscribed);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetStats);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.VideoConvert) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VideoConvert);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemixAndResample);
      }
      if (messageCase_ == MessageOneofCase.E2Ee) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(E2Ee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FfiResponse other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeResponse();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectResponse();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectResponse();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackResponse();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackResponse();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.PublishData:
          if (PublishData == null) {
            PublishData = new global::LiveKit.Proto.PublishDataResponse();
          }
          PublishData.MergeFrom(other.PublishData);
          break;
        case MessageOneofCase.SetSubscribed:
          if (SetSubscribed == null) {
            SetSubscribed = new global::LiveKit.Proto.SetSubscribedResponse();
          }
          SetSubscribed.MergeFrom(other.SetSubscribed);
          break;
        case MessageOneofCase.UpdateLocalMetadata:
          if (UpdateLocalMetadata == null) {
            UpdateLocalMetadata = new global::LiveKit.Proto.UpdateLocalMetadataResponse();
          }
          UpdateLocalMetadata.MergeFrom(other.UpdateLocalMetadata);
          break;
        case MessageOneofCase.UpdateLocalName:
          if (UpdateLocalName == null) {
            UpdateLocalName = new global::LiveKit.Proto.UpdateLocalNameResponse();
          }
          UpdateLocalName.MergeFrom(other.UpdateLocalName);
          break;
        case MessageOneofCase.GetSessionStats:
          if (GetSessionStats == null) {
            GetSessionStats = new global::LiveKit.Proto.GetSessionStatsResponse();
          }
          GetSessionStats.MergeFrom(other.GetSessionStats);
          break;
        case MessageOneofCase.PublishTranscription:
          if (PublishTranscription == null) {
            PublishTranscription = new global::LiveKit.Proto.PublishTranscriptionResponse();
          }
          PublishTranscription.MergeFrom(other.PublishTranscription);
          break;
        case MessageOneofCase.CreateVideoTrack:
          if (CreateVideoTrack == null) {
            CreateVideoTrack = new global::LiveKit.Proto.CreateVideoTrackResponse();
          }
          CreateVideoTrack.MergeFrom(other.CreateVideoTrack);
          break;
        case MessageOneofCase.CreateAudioTrack:
          if (CreateAudioTrack == null) {
            CreateAudioTrack = new global::LiveKit.Proto.CreateAudioTrackResponse();
          }
          CreateAudioTrack.MergeFrom(other.CreateAudioTrack);
          break;
        case MessageOneofCase.GetStats:
          if (GetStats == null) {
            GetStats = new global::LiveKit.Proto.GetStatsResponse();
          }
          GetStats.MergeFrom(other.GetStats);
          break;
        case MessageOneofCase.NewVideoStream:
          if (NewVideoStream == null) {
            NewVideoStream = new global::LiveKit.Proto.NewVideoStreamResponse();
          }
          NewVideoStream.MergeFrom(other.NewVideoStream);
          break;
        case MessageOneofCase.NewVideoSource:
          if (NewVideoSource == null) {
            NewVideoSource = new global::LiveKit.Proto.NewVideoSourceResponse();
          }
          NewVideoSource.MergeFrom(other.NewVideoSource);
          break;
        case MessageOneofCase.CaptureVideoFrame:
          if (CaptureVideoFrame == null) {
            CaptureVideoFrame = new global::LiveKit.Proto.CaptureVideoFrameResponse();
          }
          CaptureVideoFrame.MergeFrom(other.CaptureVideoFrame);
          break;
        case MessageOneofCase.VideoConvert:
          if (VideoConvert == null) {
            VideoConvert = new global::LiveKit.Proto.VideoConvertResponse();
          }
          VideoConvert.MergeFrom(other.VideoConvert);
          break;
        case MessageOneofCase.NewAudioStream:
          if (NewAudioStream == null) {
            NewAudioStream = new global::LiveKit.Proto.NewAudioStreamResponse();
          }
          NewAudioStream.MergeFrom(other.NewAudioStream);
          break;
        case MessageOneofCase.NewAudioSource:
          if (NewAudioSource == null) {
            NewAudioSource = new global::LiveKit.Proto.NewAudioSourceResponse();
          }
          NewAudioSource.MergeFrom(other.NewAudioSource);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameResponse();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.NewAudioResampler:
          if (NewAudioResampler == null) {
            NewAudioResampler = new global::LiveKit.Proto.NewAudioResamplerResponse();
          }
          NewAudioResampler.MergeFrom(other.NewAudioResampler);
          break;
        case MessageOneofCase.RemixAndResample:
          if (RemixAndResample == null) {
            RemixAndResample = new global::LiveKit.Proto.RemixAndResampleResponse();
          }
          RemixAndResample.MergeFrom(other.RemixAndResample);
          break;
        case MessageOneofCase.E2Ee:
          if (E2Ee == null) {
            E2Ee = new global::LiveKit.Proto.E2eeResponse();
          }
          E2Ee.MergeFrom(other.E2Ee);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeResponse subBuilder = new global::LiveKit.Proto.DisposeResponse();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectResponse subBuilder = new global::LiveKit.Proto.ConnectResponse();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectResponse subBuilder = new global::LiveKit.Proto.DisconnectResponse();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackResponse subBuilder = new global::LiveKit.Proto.PublishTrackResponse();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackResponse subBuilder = new global::LiveKit.Proto.UnpublishTrackResponse();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataResponse subBuilder = new global::LiveKit.Proto.PublishDataResponse();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedResponse subBuilder = new global::LiveKit.Proto.SetSubscribedResponse();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.UpdateLocalMetadataResponse subBuilder = new global::LiveKit.Proto.UpdateLocalMetadataResponse();
            if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
              subBuilder.MergeFrom(UpdateLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.UpdateLocalNameResponse subBuilder = new global::LiveKit.Proto.UpdateLocalNameResponse();
            if (messageCase_ == MessageOneofCase.UpdateLocalName) {
              subBuilder.MergeFrom(UpdateLocalName);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.GetSessionStatsResponse subBuilder = new global::LiveKit.Proto.GetSessionStatsResponse();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.PublishTranscriptionResponse subBuilder = new global::LiveKit.Proto.PublishTranscriptionResponse();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.CreateVideoTrackResponse subBuilder = new global::LiveKit.Proto.CreateVideoTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.CreateAudioTrackResponse subBuilder = new global::LiveKit.Proto.CreateAudioTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.GetStatsResponse subBuilder = new global::LiveKit.Proto.GetStatsResponse();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewVideoStreamResponse subBuilder = new global::LiveKit.Proto.NewVideoStreamResponse();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewVideoSourceResponse subBuilder = new global::LiveKit.Proto.NewVideoSourceResponse();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureVideoFrameResponse subBuilder = new global::LiveKit.Proto.CaptureVideoFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.VideoConvertResponse subBuilder = new global::LiveKit.Proto.VideoConvertResponse();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.NewAudioStreamResponse subBuilder = new global::LiveKit.Proto.NewAudioStreamResponse();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.NewAudioSourceResponse subBuilder = new global::LiveKit.Proto.NewAudioSourceResponse();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.CaptureAudioFrameResponse subBuilder = new global::LiveKit.Proto.CaptureAudioFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioResamplerResponse subBuilder = new global::LiveKit.Proto.NewAudioResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.RemixAndResampleResponse subBuilder = new global::LiveKit.Proto.RemixAndResampleResponse();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.E2eeResponse subBuilder = new global::LiveKit.Proto.E2eeResponse();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::LiveKit.Proto.DisposeResponse subBuilder = new global::LiveKit.Proto.DisposeResponse();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectResponse subBuilder = new global::LiveKit.Proto.ConnectResponse();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectResponse subBuilder = new global::LiveKit.Proto.DisconnectResponse();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackResponse subBuilder = new global::LiveKit.Proto.PublishTrackResponse();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackResponse subBuilder = new global::LiveKit.Proto.UnpublishTrackResponse();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.PublishDataResponse subBuilder = new global::LiveKit.Proto.PublishDataResponse();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.SetSubscribedResponse subBuilder = new global::LiveKit.Proto.SetSubscribedResponse();
            if (messageCase_ == MessageOneofCase.SetSubscribed) {
              subBuilder.MergeFrom(SetSubscribed);
            }
            input.ReadMessage(subBuilder);
            SetSubscribed = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.UpdateLocalMetadataResponse subBuilder = new global::LiveKit.Proto.UpdateLocalMetadataResponse();
            if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
              subBuilder.MergeFrom(UpdateLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalMetadata = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.UpdateLocalNameResponse subBuilder = new global::LiveKit.Proto.UpdateLocalNameResponse();
            if (messageCase_ == MessageOneofCase.UpdateLocalName) {
              subBuilder.MergeFrom(UpdateLocalName);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalName = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.GetSessionStatsResponse subBuilder = new global::LiveKit.Proto.GetSessionStatsResponse();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.PublishTranscriptionResponse subBuilder = new global::LiveKit.Proto.PublishTranscriptionResponse();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.CreateVideoTrackResponse subBuilder = new global::LiveKit.Proto.CreateVideoTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.CreateAudioTrackResponse subBuilder = new global::LiveKit.Proto.CreateAudioTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.GetStatsResponse subBuilder = new global::LiveKit.Proto.GetStatsResponse();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewVideoStreamResponse subBuilder = new global::LiveKit.Proto.NewVideoStreamResponse();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewVideoSourceResponse subBuilder = new global::LiveKit.Proto.NewVideoSourceResponse();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureVideoFrameResponse subBuilder = new global::LiveKit.Proto.CaptureVideoFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.VideoConvertResponse subBuilder = new global::LiveKit.Proto.VideoConvertResponse();
            if (messageCase_ == MessageOneofCase.VideoConvert) {
              subBuilder.MergeFrom(VideoConvert);
            }
            input.ReadMessage(subBuilder);
            VideoConvert = subBuilder;
            break;
          }
          case 178: {
            global::LiveKit.Proto.NewAudioStreamResponse subBuilder = new global::LiveKit.Proto.NewAudioStreamResponse();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 186: {
            global::LiveKit.Proto.NewAudioSourceResponse subBuilder = new global::LiveKit.Proto.NewAudioSourceResponse();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 194: {
            global::LiveKit.Proto.CaptureAudioFrameResponse subBuilder = new global::LiveKit.Proto.CaptureAudioFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 202: {
            global::LiveKit.Proto.NewAudioResamplerResponse subBuilder = new global::LiveKit.Proto.NewAudioResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 210: {
            global::LiveKit.Proto.RemixAndResampleResponse subBuilder = new global::LiveKit.Proto.RemixAndResampleResponse();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
          case 218: {
            global::LiveKit.Proto.E2eeResponse subBuilder = new global::LiveKit.Proto.E2eeResponse();
            if (messageCase_ == MessageOneofCase.E2Ee) {
              subBuilder.MergeFrom(E2Ee);
            }
            input.ReadMessage(subBuilder);
            E2Ee = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// To minimize complexity, participant events are not included in the protocol.
  /// It is easily deducible from the room events and it turned out that is is easier to implement
  /// on the ffi client side.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FfiEvent : pb::IMessage<FfiEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FfiEvent> _parser = new pb::MessageParser<FfiEvent>(() => new FfiEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FfiEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiEvent(FfiEvent other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.RoomEvent:
          RoomEvent = other.RoomEvent.Clone();
          break;
        case MessageOneofCase.TrackEvent:
          TrackEvent = other.TrackEvent.Clone();
          break;
        case MessageOneofCase.VideoStreamEvent:
          VideoStreamEvent = other.VideoStreamEvent.Clone();
          break;
        case MessageOneofCase.AudioStreamEvent:
          AudioStreamEvent = other.AudioStreamEvent.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.PublishData:
          PublishData = other.PublishData.Clone();
          break;
        case MessageOneofCase.PublishTranscription:
          PublishTranscription = other.PublishTranscription.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.UpdateLocalMetadata:
          UpdateLocalMetadata = other.UpdateLocalMetadata.Clone();
          break;
        case MessageOneofCase.UpdateLocalName:
          UpdateLocalName = other.UpdateLocalName.Clone();
          break;
        case MessageOneofCase.GetStats:
          GetStats = other.GetStats.Clone();
          break;
        case MessageOneofCase.Logs:
          Logs = other.Logs.Clone();
          break;
        case MessageOneofCase.GetSessionStats:
          GetSessionStats = other.GetSessionStats.Clone();
          break;
        case MessageOneofCase.Panic:
          Panic = other.Panic.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FfiEvent Clone() {
      return new FfiEvent(this);
    }

    /// <summary>Field number for the "room_event" field.</summary>
    public const int RoomEventFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RoomEvent RoomEvent {
      get { return messageCase_ == MessageOneofCase.RoomEvent ? (global::LiveKit.Proto.RoomEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RoomEvent;
      }
    }

    /// <summary>Field number for the "track_event" field.</summary>
    public const int TrackEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.TrackEvent TrackEvent {
      get { return messageCase_ == MessageOneofCase.TrackEvent ? (global::LiveKit.Proto.TrackEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.TrackEvent;
      }
    }

    /// <summary>Field number for the "video_stream_event" field.</summary>
    public const int VideoStreamEventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoStreamEvent VideoStreamEvent {
      get { return messageCase_ == MessageOneofCase.VideoStreamEvent ? (global::LiveKit.Proto.VideoStreamEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoStreamEvent;
      }
    }

    /// <summary>Field number for the "audio_stream_event" field.</summary>
    public const int AudioStreamEventFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AudioStreamEvent AudioStreamEvent {
      get { return messageCase_ == MessageOneofCase.AudioStreamEvent ? (global::LiveKit.Proto.AudioStreamEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AudioStreamEvent;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectCallback Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectCallback Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeCallback Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackCallback PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackCallback UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "publish_data" field.</summary>
    public const int PublishDataFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishDataCallback PublishData {
      get { return messageCase_ == MessageOneofCase.PublishData ? (global::LiveKit.Proto.PublishDataCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishData;
      }
    }

    /// <summary>Field number for the "publish_transcription" field.</summary>
    public const int PublishTranscriptionFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTranscriptionCallback PublishTranscription {
      get { return messageCase_ == MessageOneofCase.PublishTranscription ? (global::LiveKit.Proto.PublishTranscriptionCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTranscription;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameCallback CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "update_local_metadata" field.</summary>
    public const int UpdateLocalMetadataFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UpdateLocalMetadataCallback UpdateLocalMetadata {
      get { return messageCase_ == MessageOneofCase.UpdateLocalMetadata ? (global::LiveKit.Proto.UpdateLocalMetadataCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateLocalMetadata;
      }
    }

    /// <summary>Field number for the "update_local_name" field.</summary>
    public const int UpdateLocalNameFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UpdateLocalNameCallback UpdateLocalName {
      get { return messageCase_ == MessageOneofCase.UpdateLocalName ? (global::LiveKit.Proto.UpdateLocalNameCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateLocalName;
      }
    }

    /// <summary>Field number for the "get_stats" field.</summary>
    public const int GetStatsFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetStatsCallback GetStats {
      get { return messageCase_ == MessageOneofCase.GetStats ? (global::LiveKit.Proto.GetStatsCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetStats;
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.LogBatch Logs {
      get { return messageCase_ == MessageOneofCase.Logs ? (global::LiveKit.Proto.LogBatch) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Logs;
      }
    }

    /// <summary>Field number for the "get_session_stats" field.</summary>
    public const int GetSessionStatsFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.GetSessionStatsCallback GetSessionStats {
      get { return messageCase_ == MessageOneofCase.GetSessionStats ? (global::LiveKit.Proto.GetSessionStatsCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GetSessionStats;
      }
    }

    /// <summary>Field number for the "panic" field.</summary>
    public const int PanicFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.Panic Panic {
      get { return messageCase_ == MessageOneofCase.Panic ? (global::LiveKit.Proto.Panic) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Panic;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      RoomEvent = 1,
      TrackEvent = 2,
      VideoStreamEvent = 3,
      AudioStreamEvent = 4,
      Connect = 5,
      Disconnect = 6,
      Dispose = 7,
      PublishTrack = 8,
      UnpublishTrack = 9,
      PublishData = 10,
      PublishTranscription = 11,
      CaptureAudioFrame = 12,
      UpdateLocalMetadata = 13,
      UpdateLocalName = 14,
      GetStats = 15,
      Logs = 16,
      GetSessionStats = 17,
      Panic = 18,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FfiEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FfiEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomEvent, other.RoomEvent)) return false;
      if (!object.Equals(TrackEvent, other.TrackEvent)) return false;
      if (!object.Equals(VideoStreamEvent, other.VideoStreamEvent)) return false;
      if (!object.Equals(AudioStreamEvent, other.AudioStreamEvent)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(PublishData, other.PublishData)) return false;
      if (!object.Equals(PublishTranscription, other.PublishTranscription)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(UpdateLocalMetadata, other.UpdateLocalMetadata)) return false;
      if (!object.Equals(UpdateLocalName, other.UpdateLocalName)) return false;
      if (!object.Equals(GetStats, other.GetStats)) return false;
      if (!object.Equals(Logs, other.Logs)) return false;
      if (!object.Equals(GetSessionStats, other.GetSessionStats)) return false;
      if (!object.Equals(Panic, other.Panic)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.RoomEvent) hash ^= RoomEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.TrackEvent) hash ^= TrackEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) hash ^= VideoStreamEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) hash ^= AudioStreamEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishData) hash ^= PublishData.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTranscription) hash ^= PublishTranscription.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) hash ^= UpdateLocalMetadata.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateLocalName) hash ^= UpdateLocalName.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetStats) hash ^= GetStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.Logs) hash ^= Logs.GetHashCode();
      if (messageCase_ == MessageOneofCase.GetSessionStats) hash ^= GetSessionStats.GetHashCode();
      if (messageCase_ == MessageOneofCase.Panic) hash ^= Panic.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(42);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(50);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(58);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(74);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(82);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(90);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(98);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        output.WriteRawTag(106);
        output.WriteMessage(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        output.WriteRawTag(114);
        output.WriteMessage(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(122);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.Logs) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Logs);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.Panic) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Panic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(42);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(50);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(58);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(74);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        output.WriteRawTag(82);
        output.WriteMessage(PublishData);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        output.WriteRawTag(90);
        output.WriteMessage(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(98);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        output.WriteRawTag(106);
        output.WriteMessage(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        output.WriteRawTag(114);
        output.WriteMessage(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        output.WriteRawTag(122);
        output.WriteMessage(GetStats);
      }
      if (messageCase_ == MessageOneofCase.Logs) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Logs);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.Panic) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Panic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.PublishData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishData);
      }
      if (messageCase_ == MessageOneofCase.PublishTranscription) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTranscription);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLocalMetadata);
      }
      if (messageCase_ == MessageOneofCase.UpdateLocalName) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLocalName);
      }
      if (messageCase_ == MessageOneofCase.GetStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetStats);
      }
      if (messageCase_ == MessageOneofCase.Logs) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Logs);
      }
      if (messageCase_ == MessageOneofCase.GetSessionStats) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSessionStats);
      }
      if (messageCase_ == MessageOneofCase.Panic) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Panic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FfiEvent other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.RoomEvent:
          if (RoomEvent == null) {
            RoomEvent = new global::LiveKit.Proto.RoomEvent();
          }
          RoomEvent.MergeFrom(other.RoomEvent);
          break;
        case MessageOneofCase.TrackEvent:
          if (TrackEvent == null) {
            TrackEvent = new global::LiveKit.Proto.TrackEvent();
          }
          TrackEvent.MergeFrom(other.TrackEvent);
          break;
        case MessageOneofCase.VideoStreamEvent:
          if (VideoStreamEvent == null) {
            VideoStreamEvent = new global::LiveKit.Proto.VideoStreamEvent();
          }
          VideoStreamEvent.MergeFrom(other.VideoStreamEvent);
          break;
        case MessageOneofCase.AudioStreamEvent:
          if (AudioStreamEvent == null) {
            AudioStreamEvent = new global::LiveKit.Proto.AudioStreamEvent();
          }
          AudioStreamEvent.MergeFrom(other.AudioStreamEvent);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectCallback();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectCallback();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeCallback();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackCallback();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackCallback();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.PublishData:
          if (PublishData == null) {
            PublishData = new global::LiveKit.Proto.PublishDataCallback();
          }
          PublishData.MergeFrom(other.PublishData);
          break;
        case MessageOneofCase.PublishTranscription:
          if (PublishTranscription == null) {
            PublishTranscription = new global::LiveKit.Proto.PublishTranscriptionCallback();
          }
          PublishTranscription.MergeFrom(other.PublishTranscription);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameCallback();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.UpdateLocalMetadata:
          if (UpdateLocalMetadata == null) {
            UpdateLocalMetadata = new global::LiveKit.Proto.UpdateLocalMetadataCallback();
          }
          UpdateLocalMetadata.MergeFrom(other.UpdateLocalMetadata);
          break;
        case MessageOneofCase.UpdateLocalName:
          if (UpdateLocalName == null) {
            UpdateLocalName = new global::LiveKit.Proto.UpdateLocalNameCallback();
          }
          UpdateLocalName.MergeFrom(other.UpdateLocalName);
          break;
        case MessageOneofCase.GetStats:
          if (GetStats == null) {
            GetStats = new global::LiveKit.Proto.GetStatsCallback();
          }
          GetStats.MergeFrom(other.GetStats);
          break;
        case MessageOneofCase.Logs:
          if (Logs == null) {
            Logs = new global::LiveKit.Proto.LogBatch();
          }
          Logs.MergeFrom(other.Logs);
          break;
        case MessageOneofCase.GetSessionStats:
          if (GetSessionStats == null) {
            GetSessionStats = new global::LiveKit.Proto.GetSessionStatsCallback();
          }
          GetSessionStats.MergeFrom(other.GetSessionStats);
          break;
        case MessageOneofCase.Panic:
          if (Panic == null) {
            Panic = new global::LiveKit.Proto.Panic();
          }
          Panic.MergeFrom(other.Panic);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LiveKit.Proto.RoomEvent subBuilder = new global::LiveKit.Proto.RoomEvent();
            if (messageCase_ == MessageOneofCase.RoomEvent) {
              subBuilder.MergeFrom(RoomEvent);
            }
            input.ReadMessage(subBuilder);
            RoomEvent = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.TrackEvent subBuilder = new global::LiveKit.Proto.TrackEvent();
            if (messageCase_ == MessageOneofCase.TrackEvent) {
              subBuilder.MergeFrom(TrackEvent);
            }
            input.ReadMessage(subBuilder);
            TrackEvent = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.VideoStreamEvent subBuilder = new global::LiveKit.Proto.VideoStreamEvent();
            if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
              subBuilder.MergeFrom(VideoStreamEvent);
            }
            input.ReadMessage(subBuilder);
            VideoStreamEvent = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.AudioStreamEvent subBuilder = new global::LiveKit.Proto.AudioStreamEvent();
            if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
              subBuilder.MergeFrom(AudioStreamEvent);
            }
            input.ReadMessage(subBuilder);
            AudioStreamEvent = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.ConnectCallback subBuilder = new global::LiveKit.Proto.ConnectCallback();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.DisconnectCallback subBuilder = new global::LiveKit.Proto.DisconnectCallback();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.DisposeCallback subBuilder = new global::LiveKit.Proto.DisposeCallback();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.PublishTrackCallback subBuilder = new global::LiveKit.Proto.PublishTrackCallback();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.UnpublishTrackCallback subBuilder = new global::LiveKit.Proto.UnpublishTrackCallback();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.PublishDataCallback subBuilder = new global::LiveKit.Proto.PublishDataCallback();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.PublishTranscriptionCallback subBuilder = new global::LiveKit.Proto.PublishTranscriptionCallback();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.CaptureAudioFrameCallback subBuilder = new global::LiveKit.Proto.CaptureAudioFrameCallback();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.UpdateLocalMetadataCallback subBuilder = new global::LiveKit.Proto.UpdateLocalMetadataCallback();
            if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
              subBuilder.MergeFrom(UpdateLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalMetadata = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.UpdateLocalNameCallback subBuilder = new global::LiveKit.Proto.UpdateLocalNameCallback();
            if (messageCase_ == MessageOneofCase.UpdateLocalName) {
              subBuilder.MergeFrom(UpdateLocalName);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalName = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.GetStatsCallback subBuilder = new global::LiveKit.Proto.GetStatsCallback();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.LogBatch subBuilder = new global::LiveKit.Proto.LogBatch();
            if (messageCase_ == MessageOneofCase.Logs) {
              subBuilder.MergeFrom(Logs);
            }
            input.ReadMessage(subBuilder);
            Logs = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.GetSessionStatsCallback subBuilder = new global::LiveKit.Proto.GetSessionStatsCallback();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.Panic subBuilder = new global::LiveKit.Proto.Panic();
            if (messageCase_ == MessageOneofCase.Panic) {
              subBuilder.MergeFrom(Panic);
            }
            input.ReadMessage(subBuilder);
            Panic = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LiveKit.Proto.RoomEvent subBuilder = new global::LiveKit.Proto.RoomEvent();
            if (messageCase_ == MessageOneofCase.RoomEvent) {
              subBuilder.MergeFrom(RoomEvent);
            }
            input.ReadMessage(subBuilder);
            RoomEvent = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.TrackEvent subBuilder = new global::LiveKit.Proto.TrackEvent();
            if (messageCase_ == MessageOneofCase.TrackEvent) {
              subBuilder.MergeFrom(TrackEvent);
            }
            input.ReadMessage(subBuilder);
            TrackEvent = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.VideoStreamEvent subBuilder = new global::LiveKit.Proto.VideoStreamEvent();
            if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
              subBuilder.MergeFrom(VideoStreamEvent);
            }
            input.ReadMessage(subBuilder);
            VideoStreamEvent = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.AudioStreamEvent subBuilder = new global::LiveKit.Proto.AudioStreamEvent();
            if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
              subBuilder.MergeFrom(AudioStreamEvent);
            }
            input.ReadMessage(subBuilder);
            AudioStreamEvent = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.ConnectCallback subBuilder = new global::LiveKit.Proto.ConnectCallback();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.DisconnectCallback subBuilder = new global::LiveKit.Proto.DisconnectCallback();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.DisposeCallback subBuilder = new global::LiveKit.Proto.DisposeCallback();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.PublishTrackCallback subBuilder = new global::LiveKit.Proto.PublishTrackCallback();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.UnpublishTrackCallback subBuilder = new global::LiveKit.Proto.UnpublishTrackCallback();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.PublishDataCallback subBuilder = new global::LiveKit.Proto.PublishDataCallback();
            if (messageCase_ == MessageOneofCase.PublishData) {
              subBuilder.MergeFrom(PublishData);
            }
            input.ReadMessage(subBuilder);
            PublishData = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.PublishTranscriptionCallback subBuilder = new global::LiveKit.Proto.PublishTranscriptionCallback();
            if (messageCase_ == MessageOneofCase.PublishTranscription) {
              subBuilder.MergeFrom(PublishTranscription);
            }
            input.ReadMessage(subBuilder);
            PublishTranscription = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.CaptureAudioFrameCallback subBuilder = new global::LiveKit.Proto.CaptureAudioFrameCallback();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.UpdateLocalMetadataCallback subBuilder = new global::LiveKit.Proto.UpdateLocalMetadataCallback();
            if (messageCase_ == MessageOneofCase.UpdateLocalMetadata) {
              subBuilder.MergeFrom(UpdateLocalMetadata);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalMetadata = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.UpdateLocalNameCallback subBuilder = new global::LiveKit.Proto.UpdateLocalNameCallback();
            if (messageCase_ == MessageOneofCase.UpdateLocalName) {
              subBuilder.MergeFrom(UpdateLocalName);
            }
            input.ReadMessage(subBuilder);
            UpdateLocalName = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.GetStatsCallback subBuilder = new global::LiveKit.Proto.GetStatsCallback();
            if (messageCase_ == MessageOneofCase.GetStats) {
              subBuilder.MergeFrom(GetStats);
            }
            input.ReadMessage(subBuilder);
            GetStats = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.LogBatch subBuilder = new global::LiveKit.Proto.LogBatch();
            if (messageCase_ == MessageOneofCase.Logs) {
              subBuilder.MergeFrom(Logs);
            }
            input.ReadMessage(subBuilder);
            Logs = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.GetSessionStatsCallback subBuilder = new global::LiveKit.Proto.GetSessionStatsCallback();
            if (messageCase_ == MessageOneofCase.GetSessionStats) {
              subBuilder.MergeFrom(GetSessionStats);
            }
            input.ReadMessage(subBuilder);
            GetSessionStats = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.Panic subBuilder = new global::LiveKit.Proto.Panic();
            if (messageCase_ == MessageOneofCase.Panic) {
              subBuilder.MergeFrom(Panic);
            }
            input.ReadMessage(subBuilder);
            Panic = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Stop all rooms synchronously (Do we need async here?).
  /// e.g: This is used for the Unity Editor after each assemblies reload.
  /// TODO(theomonnom): Implement a debug mode where we can find all leaked handles?
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DisposeRequest : pb::IMessage<DisposeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeRequest> _parser = new pb::MessageParser<DisposeRequest>(() => new DisposeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest(DisposeRequest other) : this() {
      async_ = other.async_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest Clone() {
      return new DisposeRequest(this);
    }

    /// <summary>Field number for the "async" field.</summary>
    public const int AsyncFieldNumber = 1;
    private bool async_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Async {
      get { return async_; }
      set {
        async_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Async != other.Async) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Async != false) hash ^= Async.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Async != false) {
        output.WriteRawTag(8);
        output.WriteBool(Async);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Async != false) {
        output.WriteRawTag(8);
        output.WriteBool(Async);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Async != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Async != false) {
        Async = other.Async;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Async = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Async = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DisposeResponse : pb::IMessage<DisposeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeResponse> _parser = new pb::MessageParser<DisposeResponse>(() => new DisposeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse(DisposeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      asyncId_ = other.asyncId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse Clone() {
      return new DisposeResponse(this);
    }

    /// <summary>Field number for the "async_id" field.</summary>
    public const int AsyncIdFieldNumber = 1;
    private readonly static ulong AsyncIdDefaultValue = 0UL;

    private ulong asyncId_;
    /// <summary>
    /// None if sync
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AsyncId {
      get { if ((_hasBits0 & 1) != 0) { return asyncId_; } else { return AsyncIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        asyncId_ = value;
      }
    }
    /// <summary>Gets whether the "async_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAsyncId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "async_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAsyncId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AsyncId != other.AsyncId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAsyncId) hash ^= AsyncId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAsyncId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAsyncId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAsyncId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AsyncId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasAsyncId) {
        AsyncId = other.AsyncId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DisposeCallback : pb::IMessage<DisposeCallback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeCallback> _parser = new pb::MessageParser<DisposeCallback>(() => new DisposeCallback());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeCallback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback(DisposeCallback other) : this() {
      asyncId_ = other.asyncId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback Clone() {
      return new DisposeCallback(this);
    }

    /// <summary>Field number for the "async_id" field.</summary>
    public const int AsyncIdFieldNumber = 1;
    private ulong asyncId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AsyncId {
      get { return asyncId_; }
      set {
        asyncId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeCallback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeCallback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AsyncId != other.AsyncId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AsyncId != 0UL) hash ^= AsyncId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AsyncId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AsyncId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AsyncId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AsyncId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeCallback other) {
      if (other == null) {
        return;
      }
      if (other.AsyncId != 0UL) {
        AsyncId = other.AsyncId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AsyncId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogRecord : pb::IMessage<LogRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogRecord> _parser = new pb::MessageParser<LogRecord>(() => new LogRecord());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRecord(LogRecord other) : this() {
      _hasBits0 = other._hasBits0;
      level_ = other.level_;
      target_ = other.target_;
      modulePath_ = other.modulePath_;
      file_ = other.file_;
      line_ = other.line_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRecord Clone() {
      return new LogRecord(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::LiveKit.Proto.LogLevel level_ = global::LiveKit.Proto.LogLevel.LogError;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.LogLevel Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private string target_ = "";
    /// <summary>
    /// e.g "livekit", "libwebrtc", "tokio-tungstenite", etc...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "module_path" field.</summary>
    public const int ModulePathFieldNumber = 3;
    private readonly static string ModulePathDefaultValue = "";

    private string modulePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModulePath {
      get { return modulePath_ ?? ModulePathDefaultValue; }
      set {
        modulePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "module_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModulePath {
      get { return modulePath_ != null; }
    }
    /// <summary>Clears the value of the "module_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModulePath() {
      modulePath_ = null;
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 4;
    private readonly static string FileDefaultValue = "";

    private string file_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string File {
      get { return file_ ?? FileDefaultValue; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "file" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFile {
      get { return file_ != null; }
    }
    /// <summary>Clears the value of the "file" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFile() {
      file_ = null;
    }

    /// <summary>Field number for the "line" field.</summary>
    public const int LineFieldNumber = 5;
    private readonly static uint LineDefaultValue = 0;

    private uint line_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Line {
      get { if ((_hasBits0 & 1) != 0) { return line_; } else { return LineDefaultValue; } }
      set {
        _hasBits0 |= 1;
        line_ = value;
      }
    }
    /// <summary>Gets whether the "line" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLine {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "line" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLine() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Target != other.Target) return false;
      if (ModulePath != other.ModulePath) return false;
      if (File != other.File) return false;
      if (Line != other.Line) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != global::LiveKit.Proto.LogLevel.LogError) hash ^= Level.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (HasModulePath) hash ^= ModulePath.GetHashCode();
      if (HasFile) hash ^= File.GetHashCode();
      if (HasLine) hash ^= Line.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != global::LiveKit.Proto.LogLevel.LogError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      if (HasModulePath) {
        output.WriteRawTag(26);
        output.WriteString(ModulePath);
      }
      if (HasFile) {
        output.WriteRawTag(34);
        output.WriteString(File);
      }
      if (HasLine) {
        output.WriteRawTag(40);
        output.WriteUInt32(Line);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != global::LiveKit.Proto.LogLevel.LogError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      if (HasModulePath) {
        output.WriteRawTag(26);
        output.WriteString(ModulePath);
      }
      if (HasFile) {
        output.WriteRawTag(34);
        output.WriteString(File);
      }
      if (HasLine) {
        output.WriteRawTag(40);
        output.WriteUInt32(Line);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Level != global::LiveKit.Proto.LogLevel.LogError) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (HasModulePath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModulePath);
      }
      if (HasFile) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      if (HasLine) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Line);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogRecord other) {
      if (other == null) {
        return;
      }
      if (other.Level != global::LiveKit.Proto.LogLevel.LogError) {
        Level = other.Level;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.HasModulePath) {
        ModulePath = other.ModulePath;
      }
      if (other.HasFile) {
        File = other.File;
      }
      if (other.HasLine) {
        Line = other.Line;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = (global::LiveKit.Proto.LogLevel) input.ReadEnum();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
          case 26: {
            ModulePath = input.ReadString();
            break;
          }
          case 34: {
            File = input.ReadString();
            break;
          }
          case 40: {
            Line = input.ReadUInt32();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = (global::LiveKit.Proto.LogLevel) input.ReadEnum();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
          case 26: {
            ModulePath = input.ReadString();
            break;
          }
          case 34: {
            File = input.ReadString();
            break;
          }
          case 40: {
            Line = input.ReadUInt32();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogBatch : pb::IMessage<LogBatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogBatch> _parser = new pb::MessageParser<LogBatch>(() => new LogBatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogBatch(LogBatch other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogBatch Clone() {
      return new LogBatch(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LiveKit.Proto.LogRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::LiveKit.Proto.LogRecord.Parser);
    private readonly pbc::RepeatedField<global::LiveKit.Proto.LogRecord> records_ = new pbc::RepeatedField<global::LiveKit.Proto.LogRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LiveKit.Proto.LogRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      records_.WriteTo(ref output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogBatch other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            records_.AddEntriesFrom(ref input, _repeated_records_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Panic : pb::IMessage<Panic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Panic> _parser = new pb::MessageParser<Panic>(() => new Panic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Panic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Panic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Panic(Panic other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Panic Clone() {
      return new Panic(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Panic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Panic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Panic other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
