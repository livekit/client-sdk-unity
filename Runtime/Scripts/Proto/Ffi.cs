// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ffi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LiveKit.Proto {

  /// <summary>Holder for reflection information generated from ffi.proto</summary>
  public static partial class FfiReflection {

    #region Descriptor
    /// <summary>File descriptor for ffi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FfiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglmZmkucHJvdG8SB2xpdmVraXQaDGhhbmRsZS5wcm90bxoLdHJhY2sucHJv",
            "dG8aCnJvb20ucHJvdG8aEXBhcnRpY2lwYW50LnByb3RvGhF2aWRlb19mcmFt",
            "ZS5wcm90bxoRYXVkaW9fZnJhbWUucHJvdG8ikQkKCkZGSVJlcXVlc3QSMAoK",
            "aW5pdGlhbGl6ZRgBIAEoCzIaLmxpdmVraXQuSW5pdGlhbGl6ZVJlcXVlc3RI",
            "ABIqCgdkaXNwb3NlGAIgASgLMhcubGl2ZWtpdC5EaXNwb3NlUmVxdWVzdEgA",
            "EioKB2Nvbm5lY3QYAyABKAsyFy5saXZla2l0LkNvbm5lY3RSZXF1ZXN0SAAS",
            "MAoKZGlzY29ubmVjdBgEIAEoCzIaLmxpdmVraXQuRGlzY29ubmVjdFJlcXVl",
            "c3RIABI1Cg1wdWJsaXNoX3RyYWNrGAUgASgLMhwubGl2ZWtpdC5QdWJsaXNo",
            "VHJhY2tSZXF1ZXN0SAASOQoPdW5wdWJsaXNoX3RyYWNrGAYgASgLMh4ubGl2",
            "ZWtpdC5VbnB1Ymxpc2hUcmFja1JlcXVlc3RIABI+ChJjcmVhdGVfdmlkZW9f",
            "dHJhY2sYByABKAsyIC5saXZla2l0LkNyZWF0ZVZpZGVvVHJhY2tSZXF1ZXN0",
            "SAASPgoSY3JlYXRlX2F1ZGlvX3RyYWNrGAggASgLMiAubGl2ZWtpdC5DcmVh",
            "dGVBdWRpb1RyYWNrUmVxdWVzdEgAEj4KEmFsbG9jX3ZpZGVvX2J1ZmZlchgJ",
            "IAEoCzIgLmxpdmVraXQuQWxsb2NWaWRlb0J1ZmZlclJlcXVlc3RIABI6ChBu",
            "ZXdfdmlkZW9fc3RyZWFtGAogASgLMh4ubGl2ZWtpdC5OZXdWaWRlb1N0cmVh",
            "bVJlcXVlc3RIABI6ChBuZXdfdmlkZW9fc291cmNlGAsgASgLMh4ubGl2ZWtp",
            "dC5OZXdWaWRlb1NvdXJjZVJlcXVlc3RIABJAChNjYXB0dXJlX3ZpZGVvX2Zy",
            "YW1lGAwgASgLMiEubGl2ZWtpdC5DYXB0dXJlVmlkZW9GcmFtZVJlcXVlc3RI",
            "ABIpCgd0b19pNDIwGA0gASgLMhYubGl2ZWtpdC5Ub0k0MjBSZXF1ZXN0SAAS",
            "KQoHdG9fYXJnYhgOIAEoCzIWLmxpdmVraXQuVG9BUkdCUmVxdWVzdEgAEj4K",
            "EmFsbG9jX2F1ZGlvX2J1ZmZlchgPIAEoCzIgLmxpdmVraXQuQWxsb2NBdWRp",
            "b0J1ZmZlclJlcXVlc3RIABI6ChBuZXdfYXVkaW9fc3RyZWFtGBAgASgLMh4u",
            "bGl2ZWtpdC5OZXdBdWRpb1N0cmVhbVJlcXVlc3RIABI6ChBuZXdfYXVkaW9f",
            "c291cmNlGBEgASgLMh4ubGl2ZWtpdC5OZXdBdWRpb1NvdXJjZVJlcXVlc3RI",
            "ABJAChNjYXB0dXJlX2F1ZGlvX2ZyYW1lGBIgASgLMiEubGl2ZWtpdC5DYXB0",
            "dXJlQXVkaW9GcmFtZVJlcXVlc3RIABJAChNuZXdfYXVkaW9fcmVzYW1wbGVy",
            "GBMgASgLMiEubGl2ZWtpdC5OZXdBdWRpb1Jlc2FtcGxlclJlcXVlc3RIABI+",
            "ChJyZW1peF9hbmRfcmVzYW1wbGUYFCABKAsyIC5saXZla2l0LlJlbWl4QW5k",
            "UmVzYW1wbGVSZXF1ZXN0SABCCQoHbWVzc2FnZSKmCQoLRkZJUmVzcG9uc2US",
            "MQoKaW5pdGlhbGl6ZRgBIAEoCzIbLmxpdmVraXQuSW5pdGlhbGl6ZVJlc3Bv",
            "bnNlSAASKwoHZGlzcG9zZRgCIAEoCzIYLmxpdmVraXQuRGlzcG9zZVJlc3Bv",
            "bnNlSAASKwoHY29ubmVjdBgDIAEoCzIYLmxpdmVraXQuQ29ubmVjdFJlc3Bv",
            "bnNlSAASMQoKZGlzY29ubmVjdBgEIAEoCzIbLmxpdmVraXQuRGlzY29ubmVj",
            "dFJlc3BvbnNlSAASNgoNcHVibGlzaF90cmFjaxgFIAEoCzIdLmxpdmVraXQu",
            "UHVibGlzaFRyYWNrUmVzcG9uc2VIABI6Cg91bnB1Ymxpc2hfdHJhY2sYBiAB",
            "KAsyHy5saXZla2l0LlVucHVibGlzaFRyYWNrUmVzcG9uc2VIABI/ChJjcmVh",
            "dGVfdmlkZW9fdHJhY2sYByABKAsyIS5saXZla2l0LkNyZWF0ZVZpZGVvVHJh",
            "Y2tSZXNwb25zZUgAEj8KEmNyZWF0ZV9hdWRpb190cmFjaxgIIAEoCzIhLmxp",
            "dmVraXQuQ3JlYXRlQXVkaW9UcmFja1Jlc3BvbnNlSAASPwoSYWxsb2Nfdmlk",
            "ZW9fYnVmZmVyGAkgASgLMiEubGl2ZWtpdC5BbGxvY1ZpZGVvQnVmZmVyUmVz",
            "cG9uc2VIABI7ChBuZXdfdmlkZW9fc3RyZWFtGAogASgLMh8ubGl2ZWtpdC5O",
            "ZXdWaWRlb1N0cmVhbVJlc3BvbnNlSAASOwoQbmV3X3ZpZGVvX3NvdXJjZRgL",
            "IAEoCzIfLmxpdmVraXQuTmV3VmlkZW9Tb3VyY2VSZXNwb25zZUgAEkEKE2Nh",
            "cHR1cmVfdmlkZW9fZnJhbWUYDCABKAsyIi5saXZla2l0LkNhcHR1cmVWaWRl",
            "b0ZyYW1lUmVzcG9uc2VIABIqCgd0b19pNDIwGA0gASgLMhcubGl2ZWtpdC5U",
            "b0k0MjBSZXNwb25zZUgAEioKB3RvX2FyZ2IYDiABKAsyFy5saXZla2l0LlRv",
            "QVJHQlJlc3BvbnNlSAASPwoSYWxsb2NfYXVkaW9fYnVmZmVyGA8gASgLMiEu",
            "bGl2ZWtpdC5BbGxvY0F1ZGlvQnVmZmVyUmVzcG9uc2VIABI7ChBuZXdfYXVk",
            "aW9fc3RyZWFtGBAgASgLMh8ubGl2ZWtpdC5OZXdBdWRpb1N0cmVhbVJlc3Bv",
            "bnNlSAASOwoQbmV3X2F1ZGlvX3NvdXJjZRgRIAEoCzIfLmxpdmVraXQuTmV3",
            "QXVkaW9Tb3VyY2VSZXNwb25zZUgAEkEKE2NhcHR1cmVfYXVkaW9fZnJhbWUY",
            "EiABKAsyIi5saXZla2l0LkNhcHR1cmVBdWRpb0ZyYW1lUmVzcG9uc2VIABJB",
            "ChNuZXdfYXVkaW9fcmVzYW1wbGVyGBMgASgLMiIubGl2ZWtpdC5OZXdBdWRp",
            "b1Jlc2FtcGxlclJlc3BvbnNlSAASPwoScmVtaXhfYW5kX3Jlc2FtcGxlGBQg",
            "ASgLMiEubGl2ZWtpdC5SZW1peEFuZFJlc2FtcGxlUmVzcG9uc2VIAEIJCgdt",
            "ZXNzYWdlIqcDCghGRklFdmVudBIoCgpyb29tX2V2ZW50GAEgASgLMhIubGl2",
            "ZWtpdC5Sb29tRXZlbnRIABIqCgt0cmFja19ldmVudBgCIAEoCzITLmxpdmVr",
            "aXQuVHJhY2tFdmVudEgAEjYKEXBhcnRpY2lwYW50X2V2ZW50GAMgASgLMhku",
            "bGl2ZWtpdC5QYXJ0aWNpcGFudEV2ZW50SAASNwoSdmlkZW9fc3RyZWFtX2V2",
            "ZW50GAQgASgLMhkubGl2ZWtpdC5WaWRlb1N0cmVhbUV2ZW50SAASNwoSYXVk",
            "aW9fc3RyZWFtX2V2ZW50GAUgASgLMhkubGl2ZWtpdC5BdWRpb1N0cmVhbUV2",
            "ZW50SAASKwoHY29ubmVjdBgGIAEoCzIYLmxpdmVraXQuQ29ubmVjdENhbGxi",
            "YWNrSAASKwoHZGlzcG9zZRgHIAEoCzIYLmxpdmVraXQuRGlzcG9zZUNhbGxi",
            "YWNrSAASNgoNcHVibGlzaF90cmFjaxgIIAEoCzIdLmxpdmVraXQuUHVibGlz",
            "aFRyYWNrQ2FsbGJhY2tIAEIJCgdtZXNzYWdlIi8KEUluaXRpYWxpemVSZXF1",
            "ZXN0EhoKEmV2ZW50X2NhbGxiYWNrX3B0chgBIAEoBCIUChJJbml0aWFsaXpl",
            "UmVzcG9uc2UiHwoORGlzcG9zZVJlcXVlc3QSDQoFYXN5bmMYASABKAgiSgoP",
            "RGlzcG9zZVJlc3BvbnNlEioKCGFzeW5jX2lkGAEgASgLMhMubGl2ZWtpdC5G",
            "RklBc3luY0lkSACIAQFCCwoJX2FzeW5jX2lkIjgKD0Rpc3Bvc2VDYWxsYmFj",
            "axIlCghhc3luY19pZBgBIAEoCzITLmxpdmVraXQuRkZJQXN5bmNJZEIQqgIN",
            "TGl2ZUtpdC5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LiveKit.Proto.HandleReflection.Descriptor, global::LiveKit.Proto.TrackReflection.Descriptor, global::LiveKit.Proto.RoomReflection.Descriptor, global::LiveKit.Proto.ParticipantReflection.Descriptor, global::LiveKit.Proto.VideoFrameReflection.Descriptor, global::LiveKit.Proto.AudioFrameReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FFIRequest), global::LiveKit.Proto.FFIRequest.Parser, new[]{ "Initialize", "Dispose", "Connect", "Disconnect", "PublishTrack", "UnpublishTrack", "CreateVideoTrack", "CreateAudioTrack", "AllocVideoBuffer", "NewVideoStream", "NewVideoSource", "CaptureVideoFrame", "ToI420", "ToArgb", "AllocAudioBuffer", "NewAudioStream", "NewAudioSource", "CaptureAudioFrame", "NewAudioResampler", "RemixAndResample" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FFIResponse), global::LiveKit.Proto.FFIResponse.Parser, new[]{ "Initialize", "Dispose", "Connect", "Disconnect", "PublishTrack", "UnpublishTrack", "CreateVideoTrack", "CreateAudioTrack", "AllocVideoBuffer", "NewVideoStream", "NewVideoSource", "CaptureVideoFrame", "ToI420", "ToArgb", "AllocAudioBuffer", "NewAudioStream", "NewAudioSource", "CaptureAudioFrame", "NewAudioResampler", "RemixAndResample" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.FFIEvent), global::LiveKit.Proto.FFIEvent.Parser, new[]{ "RoomEvent", "TrackEvent", "ParticipantEvent", "VideoStreamEvent", "AudioStreamEvent", "Connect", "Dispose", "PublishTrack" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.InitializeRequest), global::LiveKit.Proto.InitializeRequest.Parser, new[]{ "EventCallbackPtr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.InitializeResponse), global::LiveKit.Proto.InitializeResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeRequest), global::LiveKit.Proto.DisposeRequest.Parser, new[]{ "Async" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeResponse), global::LiveKit.Proto.DisposeResponse.Parser, new[]{ "AsyncId" }, new[]{ "AsyncId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.DisposeCallback), global::LiveKit.Proto.DisposeCallback.Parser, new[]{ "AsyncId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  //// This is the input of livekit_ffi_request function
  //// We always expect a response (FFIResponse)
  /// </summary>
  public sealed partial class FFIRequest : pb::IMessage<FFIRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FFIRequest> _parser = new pb::MessageParser<FFIRequest>(() => new FFIRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FFIRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIRequest(FFIRequest other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Initialize:
          Initialize = other.Initialize.Clone();
          break;
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.CreateVideoTrack:
          CreateVideoTrack = other.CreateVideoTrack.Clone();
          break;
        case MessageOneofCase.CreateAudioTrack:
          CreateAudioTrack = other.CreateAudioTrack.Clone();
          break;
        case MessageOneofCase.AllocVideoBuffer:
          AllocVideoBuffer = other.AllocVideoBuffer.Clone();
          break;
        case MessageOneofCase.NewVideoStream:
          NewVideoStream = other.NewVideoStream.Clone();
          break;
        case MessageOneofCase.NewVideoSource:
          NewVideoSource = other.NewVideoSource.Clone();
          break;
        case MessageOneofCase.CaptureVideoFrame:
          CaptureVideoFrame = other.CaptureVideoFrame.Clone();
          break;
        case MessageOneofCase.ToI420:
          ToI420 = other.ToI420.Clone();
          break;
        case MessageOneofCase.ToArgb:
          ToArgb = other.ToArgb.Clone();
          break;
        case MessageOneofCase.AllocAudioBuffer:
          AllocAudioBuffer = other.AllocAudioBuffer.Clone();
          break;
        case MessageOneofCase.NewAudioStream:
          NewAudioStream = other.NewAudioStream.Clone();
          break;
        case MessageOneofCase.NewAudioSource:
          NewAudioSource = other.NewAudioSource.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.NewAudioResampler:
          NewAudioResampler = other.NewAudioResampler.Clone();
          break;
        case MessageOneofCase.RemixAndResample:
          RemixAndResample = other.RemixAndResample.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIRequest Clone() {
      return new FFIRequest(this);
    }

    /// <summary>Field number for the "initialize" field.</summary>
    public const int InitializeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.InitializeRequest Initialize {
      get { return messageCase_ == MessageOneofCase.Initialize ? (global::LiveKit.Proto.InitializeRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Initialize;
      }
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeRequest Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 3;
    /// <summary>
    /// Room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectRequest Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectRequest Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackRequest PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackRequest UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "create_video_track" field.</summary>
    public const int CreateVideoTrackFieldNumber = 7;
    /// <summary>
    /// Track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateVideoTrackRequest CreateVideoTrack {
      get { return messageCase_ == MessageOneofCase.CreateVideoTrack ? (global::LiveKit.Proto.CreateVideoTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateVideoTrack;
      }
    }

    /// <summary>Field number for the "create_audio_track" field.</summary>
    public const int CreateAudioTrackFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateAudioTrackRequest CreateAudioTrack {
      get { return messageCase_ == MessageOneofCase.CreateAudioTrack ? (global::LiveKit.Proto.CreateAudioTrackRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateAudioTrack;
      }
    }

    /// <summary>Field number for the "alloc_video_buffer" field.</summary>
    public const int AllocVideoBufferFieldNumber = 9;
    /// <summary>
    /// Video
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AllocVideoBufferRequest AllocVideoBuffer {
      get { return messageCase_ == MessageOneofCase.AllocVideoBuffer ? (global::LiveKit.Proto.AllocVideoBufferRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AllocVideoBuffer;
      }
    }

    /// <summary>Field number for the "new_video_stream" field.</summary>
    public const int NewVideoStreamFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoStreamRequest NewVideoStream {
      get { return messageCase_ == MessageOneofCase.NewVideoStream ? (global::LiveKit.Proto.NewVideoStreamRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoStream;
      }
    }

    /// <summary>Field number for the "new_video_source" field.</summary>
    public const int NewVideoSourceFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoSourceRequest NewVideoSource {
      get { return messageCase_ == MessageOneofCase.NewVideoSource ? (global::LiveKit.Proto.NewVideoSourceRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoSource;
      }
    }

    /// <summary>Field number for the "capture_video_frame" field.</summary>
    public const int CaptureVideoFrameFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureVideoFrameRequest CaptureVideoFrame {
      get { return messageCase_ == MessageOneofCase.CaptureVideoFrame ? (global::LiveKit.Proto.CaptureVideoFrameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureVideoFrame;
      }
    }

    /// <summary>Field number for the "to_i420" field.</summary>
    public const int ToI420FieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ToI420Request ToI420 {
      get { return messageCase_ == MessageOneofCase.ToI420 ? (global::LiveKit.Proto.ToI420Request) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ToI420;
      }
    }

    /// <summary>Field number for the "to_argb" field.</summary>
    public const int ToArgbFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ToARGBRequest ToArgb {
      get { return messageCase_ == MessageOneofCase.ToArgb ? (global::LiveKit.Proto.ToARGBRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ToArgb;
      }
    }

    /// <summary>Field number for the "alloc_audio_buffer" field.</summary>
    public const int AllocAudioBufferFieldNumber = 15;
    /// <summary>
    /// Audio
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AllocAudioBufferRequest AllocAudioBuffer {
      get { return messageCase_ == MessageOneofCase.AllocAudioBuffer ? (global::LiveKit.Proto.AllocAudioBufferRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AllocAudioBuffer;
      }
    }

    /// <summary>Field number for the "new_audio_stream" field.</summary>
    public const int NewAudioStreamFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioStreamRequest NewAudioStream {
      get { return messageCase_ == MessageOneofCase.NewAudioStream ? (global::LiveKit.Proto.NewAudioStreamRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioStream;
      }
    }

    /// <summary>Field number for the "new_audio_source" field.</summary>
    public const int NewAudioSourceFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioSourceRequest NewAudioSource {
      get { return messageCase_ == MessageOneofCase.NewAudioSource ? (global::LiveKit.Proto.NewAudioSourceRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioSource;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameRequest CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "new_audio_resampler" field.</summary>
    public const int NewAudioResamplerFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioResamplerRequest NewAudioResampler {
      get { return messageCase_ == MessageOneofCase.NewAudioResampler ? (global::LiveKit.Proto.NewAudioResamplerRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioResampler;
      }
    }

    /// <summary>Field number for the "remix_and_resample" field.</summary>
    public const int RemixAndResampleFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RemixAndResampleRequest RemixAndResample {
      get { return messageCase_ == MessageOneofCase.RemixAndResample ? (global::LiveKit.Proto.RemixAndResampleRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RemixAndResample;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Initialize = 1,
      Dispose = 2,
      Connect = 3,
      Disconnect = 4,
      PublishTrack = 5,
      UnpublishTrack = 6,
      CreateVideoTrack = 7,
      CreateAudioTrack = 8,
      AllocVideoBuffer = 9,
      NewVideoStream = 10,
      NewVideoSource = 11,
      CaptureVideoFrame = 12,
      ToI420 = 13,
      ToArgb = 14,
      AllocAudioBuffer = 15,
      NewAudioStream = 16,
      NewAudioSource = 17,
      CaptureAudioFrame = 18,
      NewAudioResampler = 19,
      RemixAndResample = 20,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FFIRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FFIRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Initialize, other.Initialize)) return false;
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(CreateVideoTrack, other.CreateVideoTrack)) return false;
      if (!object.Equals(CreateAudioTrack, other.CreateAudioTrack)) return false;
      if (!object.Equals(AllocVideoBuffer, other.AllocVideoBuffer)) return false;
      if (!object.Equals(NewVideoStream, other.NewVideoStream)) return false;
      if (!object.Equals(NewVideoSource, other.NewVideoSource)) return false;
      if (!object.Equals(CaptureVideoFrame, other.CaptureVideoFrame)) return false;
      if (!object.Equals(ToI420, other.ToI420)) return false;
      if (!object.Equals(ToArgb, other.ToArgb)) return false;
      if (!object.Equals(AllocAudioBuffer, other.AllocAudioBuffer)) return false;
      if (!object.Equals(NewAudioStream, other.NewAudioStream)) return false;
      if (!object.Equals(NewAudioSource, other.NewAudioSource)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(NewAudioResampler, other.NewAudioResampler)) return false;
      if (!object.Equals(RemixAndResample, other.RemixAndResample)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Initialize) hash ^= Initialize.GetHashCode();
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) hash ^= CreateVideoTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) hash ^= CreateAudioTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) hash ^= AllocVideoBuffer.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoStream) hash ^= NewVideoStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoSource) hash ^= NewVideoSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) hash ^= CaptureVideoFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.ToI420) hash ^= ToI420.GetHashCode();
      if (messageCase_ == MessageOneofCase.ToArgb) hash ^= ToArgb.GetHashCode();
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) hash ^= AllocAudioBuffer.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioStream) hash ^= NewAudioStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioSource) hash ^= NewAudioSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioResampler) hash ^= NewAudioResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.RemixAndResample) hash ^= RemixAndResample.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.Initialize) {
        output.WriteRawTag(10);
        output.WriteMessage(Initialize);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
        output.WriteRawTag(74);
        output.WriteMessage(AllocVideoBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(82);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(90);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(98);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.ToI420) {
        output.WriteRawTag(106);
        output.WriteMessage(ToI420);
      }
      if (messageCase_ == MessageOneofCase.ToArgb) {
        output.WriteRawTag(114);
        output.WriteMessage(ToArgb);
      }
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
        output.WriteRawTag(122);
        output.WriteMessage(AllocAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.Initialize) {
        output.WriteRawTag(10);
        output.WriteMessage(Initialize);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
        output.WriteRawTag(74);
        output.WriteMessage(AllocVideoBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(82);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(90);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(98);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.ToI420) {
        output.WriteRawTag(106);
        output.WriteMessage(ToI420);
      }
      if (messageCase_ == MessageOneofCase.ToArgb) {
        output.WriteRawTag(114);
        output.WriteMessage(ToArgb);
      }
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
        output.WriteRawTag(122);
        output.WriteMessage(AllocAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Initialize) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Initialize);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllocVideoBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.ToI420) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToI420);
      }
      if (messageCase_ == MessageOneofCase.ToArgb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToArgb);
      }
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllocAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemixAndResample);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FFIRequest other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Initialize:
          if (Initialize == null) {
            Initialize = new global::LiveKit.Proto.InitializeRequest();
          }
          Initialize.MergeFrom(other.Initialize);
          break;
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeRequest();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectRequest();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectRequest();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackRequest();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackRequest();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.CreateVideoTrack:
          if (CreateVideoTrack == null) {
            CreateVideoTrack = new global::LiveKit.Proto.CreateVideoTrackRequest();
          }
          CreateVideoTrack.MergeFrom(other.CreateVideoTrack);
          break;
        case MessageOneofCase.CreateAudioTrack:
          if (CreateAudioTrack == null) {
            CreateAudioTrack = new global::LiveKit.Proto.CreateAudioTrackRequest();
          }
          CreateAudioTrack.MergeFrom(other.CreateAudioTrack);
          break;
        case MessageOneofCase.AllocVideoBuffer:
          if (AllocVideoBuffer == null) {
            AllocVideoBuffer = new global::LiveKit.Proto.AllocVideoBufferRequest();
          }
          AllocVideoBuffer.MergeFrom(other.AllocVideoBuffer);
          break;
        case MessageOneofCase.NewVideoStream:
          if (NewVideoStream == null) {
            NewVideoStream = new global::LiveKit.Proto.NewVideoStreamRequest();
          }
          NewVideoStream.MergeFrom(other.NewVideoStream);
          break;
        case MessageOneofCase.NewVideoSource:
          if (NewVideoSource == null) {
            NewVideoSource = new global::LiveKit.Proto.NewVideoSourceRequest();
          }
          NewVideoSource.MergeFrom(other.NewVideoSource);
          break;
        case MessageOneofCase.CaptureVideoFrame:
          if (CaptureVideoFrame == null) {
            CaptureVideoFrame = new global::LiveKit.Proto.CaptureVideoFrameRequest();
          }
          CaptureVideoFrame.MergeFrom(other.CaptureVideoFrame);
          break;
        case MessageOneofCase.ToI420:
          if (ToI420 == null) {
            ToI420 = new global::LiveKit.Proto.ToI420Request();
          }
          ToI420.MergeFrom(other.ToI420);
          break;
        case MessageOneofCase.ToArgb:
          if (ToArgb == null) {
            ToArgb = new global::LiveKit.Proto.ToARGBRequest();
          }
          ToArgb.MergeFrom(other.ToArgb);
          break;
        case MessageOneofCase.AllocAudioBuffer:
          if (AllocAudioBuffer == null) {
            AllocAudioBuffer = new global::LiveKit.Proto.AllocAudioBufferRequest();
          }
          AllocAudioBuffer.MergeFrom(other.AllocAudioBuffer);
          break;
        case MessageOneofCase.NewAudioStream:
          if (NewAudioStream == null) {
            NewAudioStream = new global::LiveKit.Proto.NewAudioStreamRequest();
          }
          NewAudioStream.MergeFrom(other.NewAudioStream);
          break;
        case MessageOneofCase.NewAudioSource:
          if (NewAudioSource == null) {
            NewAudioSource = new global::LiveKit.Proto.NewAudioSourceRequest();
          }
          NewAudioSource.MergeFrom(other.NewAudioSource);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameRequest();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.NewAudioResampler:
          if (NewAudioResampler == null) {
            NewAudioResampler = new global::LiveKit.Proto.NewAudioResamplerRequest();
          }
          NewAudioResampler.MergeFrom(other.NewAudioResampler);
          break;
        case MessageOneofCase.RemixAndResample:
          if (RemixAndResample == null) {
            RemixAndResample = new global::LiveKit.Proto.RemixAndResampleRequest();
          }
          RemixAndResample.MergeFrom(other.RemixAndResample);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LiveKit.Proto.InitializeRequest subBuilder = new global::LiveKit.Proto.InitializeRequest();
            if (messageCase_ == MessageOneofCase.Initialize) {
              subBuilder.MergeFrom(Initialize);
            }
            input.ReadMessage(subBuilder);
            Initialize = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.DisposeRequest subBuilder = new global::LiveKit.Proto.DisposeRequest();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectRequest subBuilder = new global::LiveKit.Proto.ConnectRequest();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectRequest subBuilder = new global::LiveKit.Proto.DisconnectRequest();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackRequest subBuilder = new global::LiveKit.Proto.PublishTrackRequest();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackRequest subBuilder = new global::LiveKit.Proto.UnpublishTrackRequest();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.CreateVideoTrackRequest subBuilder = new global::LiveKit.Proto.CreateVideoTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.CreateAudioTrackRequest subBuilder = new global::LiveKit.Proto.CreateAudioTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.AllocVideoBufferRequest subBuilder = new global::LiveKit.Proto.AllocVideoBufferRequest();
            if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
              subBuilder.MergeFrom(AllocVideoBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocVideoBuffer = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.NewVideoStreamRequest subBuilder = new global::LiveKit.Proto.NewVideoStreamRequest();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.NewVideoSourceRequest subBuilder = new global::LiveKit.Proto.NewVideoSourceRequest();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.CaptureVideoFrameRequest subBuilder = new global::LiveKit.Proto.CaptureVideoFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.ToI420Request subBuilder = new global::LiveKit.Proto.ToI420Request();
            if (messageCase_ == MessageOneofCase.ToI420) {
              subBuilder.MergeFrom(ToI420);
            }
            input.ReadMessage(subBuilder);
            ToI420 = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.ToARGBRequest subBuilder = new global::LiveKit.Proto.ToARGBRequest();
            if (messageCase_ == MessageOneofCase.ToArgb) {
              subBuilder.MergeFrom(ToArgb);
            }
            input.ReadMessage(subBuilder);
            ToArgb = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.AllocAudioBufferRequest subBuilder = new global::LiveKit.Proto.AllocAudioBufferRequest();
            if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
              subBuilder.MergeFrom(AllocAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocAudioBuffer = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewAudioStreamRequest subBuilder = new global::LiveKit.Proto.NewAudioStreamRequest();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewAudioSourceRequest subBuilder = new global::LiveKit.Proto.NewAudioSourceRequest();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureAudioFrameRequest subBuilder = new global::LiveKit.Proto.CaptureAudioFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.NewAudioResamplerRequest subBuilder = new global::LiveKit.Proto.NewAudioResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.RemixAndResampleRequest subBuilder = new global::LiveKit.Proto.RemixAndResampleRequest();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LiveKit.Proto.InitializeRequest subBuilder = new global::LiveKit.Proto.InitializeRequest();
            if (messageCase_ == MessageOneofCase.Initialize) {
              subBuilder.MergeFrom(Initialize);
            }
            input.ReadMessage(subBuilder);
            Initialize = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.DisposeRequest subBuilder = new global::LiveKit.Proto.DisposeRequest();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectRequest subBuilder = new global::LiveKit.Proto.ConnectRequest();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectRequest subBuilder = new global::LiveKit.Proto.DisconnectRequest();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackRequest subBuilder = new global::LiveKit.Proto.PublishTrackRequest();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackRequest subBuilder = new global::LiveKit.Proto.UnpublishTrackRequest();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.CreateVideoTrackRequest subBuilder = new global::LiveKit.Proto.CreateVideoTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.CreateAudioTrackRequest subBuilder = new global::LiveKit.Proto.CreateAudioTrackRequest();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.AllocVideoBufferRequest subBuilder = new global::LiveKit.Proto.AllocVideoBufferRequest();
            if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
              subBuilder.MergeFrom(AllocVideoBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocVideoBuffer = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.NewVideoStreamRequest subBuilder = new global::LiveKit.Proto.NewVideoStreamRequest();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.NewVideoSourceRequest subBuilder = new global::LiveKit.Proto.NewVideoSourceRequest();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.CaptureVideoFrameRequest subBuilder = new global::LiveKit.Proto.CaptureVideoFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.ToI420Request subBuilder = new global::LiveKit.Proto.ToI420Request();
            if (messageCase_ == MessageOneofCase.ToI420) {
              subBuilder.MergeFrom(ToI420);
            }
            input.ReadMessage(subBuilder);
            ToI420 = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.ToARGBRequest subBuilder = new global::LiveKit.Proto.ToARGBRequest();
            if (messageCase_ == MessageOneofCase.ToArgb) {
              subBuilder.MergeFrom(ToArgb);
            }
            input.ReadMessage(subBuilder);
            ToArgb = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.AllocAudioBufferRequest subBuilder = new global::LiveKit.Proto.AllocAudioBufferRequest();
            if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
              subBuilder.MergeFrom(AllocAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocAudioBuffer = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewAudioStreamRequest subBuilder = new global::LiveKit.Proto.NewAudioStreamRequest();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewAudioSourceRequest subBuilder = new global::LiveKit.Proto.NewAudioSourceRequest();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureAudioFrameRequest subBuilder = new global::LiveKit.Proto.CaptureAudioFrameRequest();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.NewAudioResamplerRequest subBuilder = new global::LiveKit.Proto.NewAudioResamplerRequest();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.RemixAndResampleRequest subBuilder = new global::LiveKit.Proto.RemixAndResampleRequest();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  //// This is the output of livekit_ffi_request function.
  /// </summary>
  public sealed partial class FFIResponse : pb::IMessage<FFIResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FFIResponse> _parser = new pb::MessageParser<FFIResponse>(() => new FFIResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FFIResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIResponse(FFIResponse other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Initialize:
          Initialize = other.Initialize.Clone();
          break;
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Disconnect:
          Disconnect = other.Disconnect.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
        case MessageOneofCase.UnpublishTrack:
          UnpublishTrack = other.UnpublishTrack.Clone();
          break;
        case MessageOneofCase.CreateVideoTrack:
          CreateVideoTrack = other.CreateVideoTrack.Clone();
          break;
        case MessageOneofCase.CreateAudioTrack:
          CreateAudioTrack = other.CreateAudioTrack.Clone();
          break;
        case MessageOneofCase.AllocVideoBuffer:
          AllocVideoBuffer = other.AllocVideoBuffer.Clone();
          break;
        case MessageOneofCase.NewVideoStream:
          NewVideoStream = other.NewVideoStream.Clone();
          break;
        case MessageOneofCase.NewVideoSource:
          NewVideoSource = other.NewVideoSource.Clone();
          break;
        case MessageOneofCase.CaptureVideoFrame:
          CaptureVideoFrame = other.CaptureVideoFrame.Clone();
          break;
        case MessageOneofCase.ToI420:
          ToI420 = other.ToI420.Clone();
          break;
        case MessageOneofCase.ToArgb:
          ToArgb = other.ToArgb.Clone();
          break;
        case MessageOneofCase.AllocAudioBuffer:
          AllocAudioBuffer = other.AllocAudioBuffer.Clone();
          break;
        case MessageOneofCase.NewAudioStream:
          NewAudioStream = other.NewAudioStream.Clone();
          break;
        case MessageOneofCase.NewAudioSource:
          NewAudioSource = other.NewAudioSource.Clone();
          break;
        case MessageOneofCase.CaptureAudioFrame:
          CaptureAudioFrame = other.CaptureAudioFrame.Clone();
          break;
        case MessageOneofCase.NewAudioResampler:
          NewAudioResampler = other.NewAudioResampler.Clone();
          break;
        case MessageOneofCase.RemixAndResample:
          RemixAndResample = other.RemixAndResample.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIResponse Clone() {
      return new FFIResponse(this);
    }

    /// <summary>Field number for the "initialize" field.</summary>
    public const int InitializeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.InitializeResponse Initialize {
      get { return messageCase_ == MessageOneofCase.Initialize ? (global::LiveKit.Proto.InitializeResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Initialize;
      }
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeResponse Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 3;
    /// <summary>
    /// Room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectResponse Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisconnectResponse Disconnect {
      get { return messageCase_ == MessageOneofCase.Disconnect ? (global::LiveKit.Proto.DisconnectResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnect;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackResponse PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    /// <summary>Field number for the "unpublish_track" field.</summary>
    public const int UnpublishTrackFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.UnpublishTrackResponse UnpublishTrack {
      get { return messageCase_ == MessageOneofCase.UnpublishTrack ? (global::LiveKit.Proto.UnpublishTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnpublishTrack;
      }
    }

    /// <summary>Field number for the "create_video_track" field.</summary>
    public const int CreateVideoTrackFieldNumber = 7;
    /// <summary>
    /// Track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateVideoTrackResponse CreateVideoTrack {
      get { return messageCase_ == MessageOneofCase.CreateVideoTrack ? (global::LiveKit.Proto.CreateVideoTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateVideoTrack;
      }
    }

    /// <summary>Field number for the "create_audio_track" field.</summary>
    public const int CreateAudioTrackFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CreateAudioTrackResponse CreateAudioTrack {
      get { return messageCase_ == MessageOneofCase.CreateAudioTrack ? (global::LiveKit.Proto.CreateAudioTrackResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CreateAudioTrack;
      }
    }

    /// <summary>Field number for the "alloc_video_buffer" field.</summary>
    public const int AllocVideoBufferFieldNumber = 9;
    /// <summary>
    /// Video
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AllocVideoBufferResponse AllocVideoBuffer {
      get { return messageCase_ == MessageOneofCase.AllocVideoBuffer ? (global::LiveKit.Proto.AllocVideoBufferResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AllocVideoBuffer;
      }
    }

    /// <summary>Field number for the "new_video_stream" field.</summary>
    public const int NewVideoStreamFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoStreamResponse NewVideoStream {
      get { return messageCase_ == MessageOneofCase.NewVideoStream ? (global::LiveKit.Proto.NewVideoStreamResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoStream;
      }
    }

    /// <summary>Field number for the "new_video_source" field.</summary>
    public const int NewVideoSourceFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewVideoSourceResponse NewVideoSource {
      get { return messageCase_ == MessageOneofCase.NewVideoSource ? (global::LiveKit.Proto.NewVideoSourceResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewVideoSource;
      }
    }

    /// <summary>Field number for the "capture_video_frame" field.</summary>
    public const int CaptureVideoFrameFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureVideoFrameResponse CaptureVideoFrame {
      get { return messageCase_ == MessageOneofCase.CaptureVideoFrame ? (global::LiveKit.Proto.CaptureVideoFrameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureVideoFrame;
      }
    }

    /// <summary>Field number for the "to_i420" field.</summary>
    public const int ToI420FieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ToI420Response ToI420 {
      get { return messageCase_ == MessageOneofCase.ToI420 ? (global::LiveKit.Proto.ToI420Response) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ToI420;
      }
    }

    /// <summary>Field number for the "to_argb" field.</summary>
    public const int ToArgbFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ToARGBResponse ToArgb {
      get { return messageCase_ == MessageOneofCase.ToArgb ? (global::LiveKit.Proto.ToARGBResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ToArgb;
      }
    }

    /// <summary>Field number for the "alloc_audio_buffer" field.</summary>
    public const int AllocAudioBufferFieldNumber = 15;
    /// <summary>
    /// Audio
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AllocAudioBufferResponse AllocAudioBuffer {
      get { return messageCase_ == MessageOneofCase.AllocAudioBuffer ? (global::LiveKit.Proto.AllocAudioBufferResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AllocAudioBuffer;
      }
    }

    /// <summary>Field number for the "new_audio_stream" field.</summary>
    public const int NewAudioStreamFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioStreamResponse NewAudioStream {
      get { return messageCase_ == MessageOneofCase.NewAudioStream ? (global::LiveKit.Proto.NewAudioStreamResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioStream;
      }
    }

    /// <summary>Field number for the "new_audio_source" field.</summary>
    public const int NewAudioSourceFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioSourceResponse NewAudioSource {
      get { return messageCase_ == MessageOneofCase.NewAudioSource ? (global::LiveKit.Proto.NewAudioSourceResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioSource;
      }
    }

    /// <summary>Field number for the "capture_audio_frame" field.</summary>
    public const int CaptureAudioFrameFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.CaptureAudioFrameResponse CaptureAudioFrame {
      get { return messageCase_ == MessageOneofCase.CaptureAudioFrame ? (global::LiveKit.Proto.CaptureAudioFrameResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CaptureAudioFrame;
      }
    }

    /// <summary>Field number for the "new_audio_resampler" field.</summary>
    public const int NewAudioResamplerFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.NewAudioResamplerResponse NewAudioResampler {
      get { return messageCase_ == MessageOneofCase.NewAudioResampler ? (global::LiveKit.Proto.NewAudioResamplerResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewAudioResampler;
      }
    }

    /// <summary>Field number for the "remix_and_resample" field.</summary>
    public const int RemixAndResampleFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RemixAndResampleResponse RemixAndResample {
      get { return messageCase_ == MessageOneofCase.RemixAndResample ? (global::LiveKit.Proto.RemixAndResampleResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RemixAndResample;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Initialize = 1,
      Dispose = 2,
      Connect = 3,
      Disconnect = 4,
      PublishTrack = 5,
      UnpublishTrack = 6,
      CreateVideoTrack = 7,
      CreateAudioTrack = 8,
      AllocVideoBuffer = 9,
      NewVideoStream = 10,
      NewVideoSource = 11,
      CaptureVideoFrame = 12,
      ToI420 = 13,
      ToArgb = 14,
      AllocAudioBuffer = 15,
      NewAudioStream = 16,
      NewAudioSource = 17,
      CaptureAudioFrame = 18,
      NewAudioResampler = 19,
      RemixAndResample = 20,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FFIResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FFIResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Initialize, other.Initialize)) return false;
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (!object.Equals(UnpublishTrack, other.UnpublishTrack)) return false;
      if (!object.Equals(CreateVideoTrack, other.CreateVideoTrack)) return false;
      if (!object.Equals(CreateAudioTrack, other.CreateAudioTrack)) return false;
      if (!object.Equals(AllocVideoBuffer, other.AllocVideoBuffer)) return false;
      if (!object.Equals(NewVideoStream, other.NewVideoStream)) return false;
      if (!object.Equals(NewVideoSource, other.NewVideoSource)) return false;
      if (!object.Equals(CaptureVideoFrame, other.CaptureVideoFrame)) return false;
      if (!object.Equals(ToI420, other.ToI420)) return false;
      if (!object.Equals(ToArgb, other.ToArgb)) return false;
      if (!object.Equals(AllocAudioBuffer, other.AllocAudioBuffer)) return false;
      if (!object.Equals(NewAudioStream, other.NewAudioStream)) return false;
      if (!object.Equals(NewAudioSource, other.NewAudioSource)) return false;
      if (!object.Equals(CaptureAudioFrame, other.CaptureAudioFrame)) return false;
      if (!object.Equals(NewAudioResampler, other.NewAudioResampler)) return false;
      if (!object.Equals(RemixAndResample, other.RemixAndResample)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Initialize) hash ^= Initialize.GetHashCode();
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnect) hash ^= Disconnect.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnpublishTrack) hash ^= UnpublishTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) hash ^= CreateVideoTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) hash ^= CreateAudioTrack.GetHashCode();
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) hash ^= AllocVideoBuffer.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoStream) hash ^= NewVideoStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewVideoSource) hash ^= NewVideoSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) hash ^= CaptureVideoFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.ToI420) hash ^= ToI420.GetHashCode();
      if (messageCase_ == MessageOneofCase.ToArgb) hash ^= ToArgb.GetHashCode();
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) hash ^= AllocAudioBuffer.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioStream) hash ^= NewAudioStream.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioSource) hash ^= NewAudioSource.GetHashCode();
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) hash ^= CaptureAudioFrame.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewAudioResampler) hash ^= NewAudioResampler.GetHashCode();
      if (messageCase_ == MessageOneofCase.RemixAndResample) hash ^= RemixAndResample.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.Initialize) {
        output.WriteRawTag(10);
        output.WriteMessage(Initialize);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
        output.WriteRawTag(74);
        output.WriteMessage(AllocVideoBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(82);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(90);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(98);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.ToI420) {
        output.WriteRawTag(106);
        output.WriteMessage(ToI420);
      }
      if (messageCase_ == MessageOneofCase.ToArgb) {
        output.WriteRawTag(114);
        output.WriteMessage(ToArgb);
      }
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
        output.WriteRawTag(122);
        output.WriteMessage(AllocAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.Initialize) {
        output.WriteRawTag(10);
        output.WriteMessage(Initialize);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(18);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(26);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        output.WriteRawTag(50);
        output.WriteMessage(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
        output.WriteRawTag(74);
        output.WriteMessage(AllocVideoBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        output.WriteRawTag(82);
        output.WriteMessage(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        output.WriteRawTag(90);
        output.WriteMessage(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        output.WriteRawTag(98);
        output.WriteMessage(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.ToI420) {
        output.WriteRawTag(106);
        output.WriteMessage(ToI420);
      }
      if (messageCase_ == MessageOneofCase.ToArgb) {
        output.WriteRawTag(114);
        output.WriteMessage(ToArgb);
      }
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
        output.WriteRawTag(122);
        output.WriteMessage(AllocAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RemixAndResample);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Initialize) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Initialize);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Disconnect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (messageCase_ == MessageOneofCase.UnpublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnpublishTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateVideoTrack);
      }
      if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateAudioTrack);
      }
      if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllocVideoBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewVideoStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewVideoStream);
      }
      if (messageCase_ == MessageOneofCase.NewVideoSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewVideoSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureVideoFrame);
      }
      if (messageCase_ == MessageOneofCase.ToI420) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToI420);
      }
      if (messageCase_ == MessageOneofCase.ToArgb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToArgb);
      }
      if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllocAudioBuffer);
      }
      if (messageCase_ == MessageOneofCase.NewAudioStream) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioStream);
      }
      if (messageCase_ == MessageOneofCase.NewAudioSource) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioSource);
      }
      if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureAudioFrame);
      }
      if (messageCase_ == MessageOneofCase.NewAudioResampler) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewAudioResampler);
      }
      if (messageCase_ == MessageOneofCase.RemixAndResample) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemixAndResample);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FFIResponse other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Initialize:
          if (Initialize == null) {
            Initialize = new global::LiveKit.Proto.InitializeResponse();
          }
          Initialize.MergeFrom(other.Initialize);
          break;
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeResponse();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectResponse();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Disconnect:
          if (Disconnect == null) {
            Disconnect = new global::LiveKit.Proto.DisconnectResponse();
          }
          Disconnect.MergeFrom(other.Disconnect);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackResponse();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
        case MessageOneofCase.UnpublishTrack:
          if (UnpublishTrack == null) {
            UnpublishTrack = new global::LiveKit.Proto.UnpublishTrackResponse();
          }
          UnpublishTrack.MergeFrom(other.UnpublishTrack);
          break;
        case MessageOneofCase.CreateVideoTrack:
          if (CreateVideoTrack == null) {
            CreateVideoTrack = new global::LiveKit.Proto.CreateVideoTrackResponse();
          }
          CreateVideoTrack.MergeFrom(other.CreateVideoTrack);
          break;
        case MessageOneofCase.CreateAudioTrack:
          if (CreateAudioTrack == null) {
            CreateAudioTrack = new global::LiveKit.Proto.CreateAudioTrackResponse();
          }
          CreateAudioTrack.MergeFrom(other.CreateAudioTrack);
          break;
        case MessageOneofCase.AllocVideoBuffer:
          if (AllocVideoBuffer == null) {
            AllocVideoBuffer = new global::LiveKit.Proto.AllocVideoBufferResponse();
          }
          AllocVideoBuffer.MergeFrom(other.AllocVideoBuffer);
          break;
        case MessageOneofCase.NewVideoStream:
          if (NewVideoStream == null) {
            NewVideoStream = new global::LiveKit.Proto.NewVideoStreamResponse();
          }
          NewVideoStream.MergeFrom(other.NewVideoStream);
          break;
        case MessageOneofCase.NewVideoSource:
          if (NewVideoSource == null) {
            NewVideoSource = new global::LiveKit.Proto.NewVideoSourceResponse();
          }
          NewVideoSource.MergeFrom(other.NewVideoSource);
          break;
        case MessageOneofCase.CaptureVideoFrame:
          if (CaptureVideoFrame == null) {
            CaptureVideoFrame = new global::LiveKit.Proto.CaptureVideoFrameResponse();
          }
          CaptureVideoFrame.MergeFrom(other.CaptureVideoFrame);
          break;
        case MessageOneofCase.ToI420:
          if (ToI420 == null) {
            ToI420 = new global::LiveKit.Proto.ToI420Response();
          }
          ToI420.MergeFrom(other.ToI420);
          break;
        case MessageOneofCase.ToArgb:
          if (ToArgb == null) {
            ToArgb = new global::LiveKit.Proto.ToARGBResponse();
          }
          ToArgb.MergeFrom(other.ToArgb);
          break;
        case MessageOneofCase.AllocAudioBuffer:
          if (AllocAudioBuffer == null) {
            AllocAudioBuffer = new global::LiveKit.Proto.AllocAudioBufferResponse();
          }
          AllocAudioBuffer.MergeFrom(other.AllocAudioBuffer);
          break;
        case MessageOneofCase.NewAudioStream:
          if (NewAudioStream == null) {
            NewAudioStream = new global::LiveKit.Proto.NewAudioStreamResponse();
          }
          NewAudioStream.MergeFrom(other.NewAudioStream);
          break;
        case MessageOneofCase.NewAudioSource:
          if (NewAudioSource == null) {
            NewAudioSource = new global::LiveKit.Proto.NewAudioSourceResponse();
          }
          NewAudioSource.MergeFrom(other.NewAudioSource);
          break;
        case MessageOneofCase.CaptureAudioFrame:
          if (CaptureAudioFrame == null) {
            CaptureAudioFrame = new global::LiveKit.Proto.CaptureAudioFrameResponse();
          }
          CaptureAudioFrame.MergeFrom(other.CaptureAudioFrame);
          break;
        case MessageOneofCase.NewAudioResampler:
          if (NewAudioResampler == null) {
            NewAudioResampler = new global::LiveKit.Proto.NewAudioResamplerResponse();
          }
          NewAudioResampler.MergeFrom(other.NewAudioResampler);
          break;
        case MessageOneofCase.RemixAndResample:
          if (RemixAndResample == null) {
            RemixAndResample = new global::LiveKit.Proto.RemixAndResampleResponse();
          }
          RemixAndResample.MergeFrom(other.RemixAndResample);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LiveKit.Proto.InitializeResponse subBuilder = new global::LiveKit.Proto.InitializeResponse();
            if (messageCase_ == MessageOneofCase.Initialize) {
              subBuilder.MergeFrom(Initialize);
            }
            input.ReadMessage(subBuilder);
            Initialize = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.DisposeResponse subBuilder = new global::LiveKit.Proto.DisposeResponse();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectResponse subBuilder = new global::LiveKit.Proto.ConnectResponse();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectResponse subBuilder = new global::LiveKit.Proto.DisconnectResponse();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackResponse subBuilder = new global::LiveKit.Proto.PublishTrackResponse();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackResponse subBuilder = new global::LiveKit.Proto.UnpublishTrackResponse();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.CreateVideoTrackResponse subBuilder = new global::LiveKit.Proto.CreateVideoTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.CreateAudioTrackResponse subBuilder = new global::LiveKit.Proto.CreateAudioTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.AllocVideoBufferResponse subBuilder = new global::LiveKit.Proto.AllocVideoBufferResponse();
            if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
              subBuilder.MergeFrom(AllocVideoBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocVideoBuffer = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.NewVideoStreamResponse subBuilder = new global::LiveKit.Proto.NewVideoStreamResponse();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.NewVideoSourceResponse subBuilder = new global::LiveKit.Proto.NewVideoSourceResponse();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.CaptureVideoFrameResponse subBuilder = new global::LiveKit.Proto.CaptureVideoFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.ToI420Response subBuilder = new global::LiveKit.Proto.ToI420Response();
            if (messageCase_ == MessageOneofCase.ToI420) {
              subBuilder.MergeFrom(ToI420);
            }
            input.ReadMessage(subBuilder);
            ToI420 = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.ToARGBResponse subBuilder = new global::LiveKit.Proto.ToARGBResponse();
            if (messageCase_ == MessageOneofCase.ToArgb) {
              subBuilder.MergeFrom(ToArgb);
            }
            input.ReadMessage(subBuilder);
            ToArgb = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.AllocAudioBufferResponse subBuilder = new global::LiveKit.Proto.AllocAudioBufferResponse();
            if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
              subBuilder.MergeFrom(AllocAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocAudioBuffer = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewAudioStreamResponse subBuilder = new global::LiveKit.Proto.NewAudioStreamResponse();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewAudioSourceResponse subBuilder = new global::LiveKit.Proto.NewAudioSourceResponse();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureAudioFrameResponse subBuilder = new global::LiveKit.Proto.CaptureAudioFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.NewAudioResamplerResponse subBuilder = new global::LiveKit.Proto.NewAudioResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.RemixAndResampleResponse subBuilder = new global::LiveKit.Proto.RemixAndResampleResponse();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LiveKit.Proto.InitializeResponse subBuilder = new global::LiveKit.Proto.InitializeResponse();
            if (messageCase_ == MessageOneofCase.Initialize) {
              subBuilder.MergeFrom(Initialize);
            }
            input.ReadMessage(subBuilder);
            Initialize = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.DisposeResponse subBuilder = new global::LiveKit.Proto.DisposeResponse();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ConnectResponse subBuilder = new global::LiveKit.Proto.ConnectResponse();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.DisconnectResponse subBuilder = new global::LiveKit.Proto.DisconnectResponse();
            if (messageCase_ == MessageOneofCase.Disconnect) {
              subBuilder.MergeFrom(Disconnect);
            }
            input.ReadMessage(subBuilder);
            Disconnect = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.PublishTrackResponse subBuilder = new global::LiveKit.Proto.PublishTrackResponse();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.UnpublishTrackResponse subBuilder = new global::LiveKit.Proto.UnpublishTrackResponse();
            if (messageCase_ == MessageOneofCase.UnpublishTrack) {
              subBuilder.MergeFrom(UnpublishTrack);
            }
            input.ReadMessage(subBuilder);
            UnpublishTrack = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.CreateVideoTrackResponse subBuilder = new global::LiveKit.Proto.CreateVideoTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateVideoTrack) {
              subBuilder.MergeFrom(CreateVideoTrack);
            }
            input.ReadMessage(subBuilder);
            CreateVideoTrack = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.CreateAudioTrackResponse subBuilder = new global::LiveKit.Proto.CreateAudioTrackResponse();
            if (messageCase_ == MessageOneofCase.CreateAudioTrack) {
              subBuilder.MergeFrom(CreateAudioTrack);
            }
            input.ReadMessage(subBuilder);
            CreateAudioTrack = subBuilder;
            break;
          }
          case 74: {
            global::LiveKit.Proto.AllocVideoBufferResponse subBuilder = new global::LiveKit.Proto.AllocVideoBufferResponse();
            if (messageCase_ == MessageOneofCase.AllocVideoBuffer) {
              subBuilder.MergeFrom(AllocVideoBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocVideoBuffer = subBuilder;
            break;
          }
          case 82: {
            global::LiveKit.Proto.NewVideoStreamResponse subBuilder = new global::LiveKit.Proto.NewVideoStreamResponse();
            if (messageCase_ == MessageOneofCase.NewVideoStream) {
              subBuilder.MergeFrom(NewVideoStream);
            }
            input.ReadMessage(subBuilder);
            NewVideoStream = subBuilder;
            break;
          }
          case 90: {
            global::LiveKit.Proto.NewVideoSourceResponse subBuilder = new global::LiveKit.Proto.NewVideoSourceResponse();
            if (messageCase_ == MessageOneofCase.NewVideoSource) {
              subBuilder.MergeFrom(NewVideoSource);
            }
            input.ReadMessage(subBuilder);
            NewVideoSource = subBuilder;
            break;
          }
          case 98: {
            global::LiveKit.Proto.CaptureVideoFrameResponse subBuilder = new global::LiveKit.Proto.CaptureVideoFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureVideoFrame) {
              subBuilder.MergeFrom(CaptureVideoFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureVideoFrame = subBuilder;
            break;
          }
          case 106: {
            global::LiveKit.Proto.ToI420Response subBuilder = new global::LiveKit.Proto.ToI420Response();
            if (messageCase_ == MessageOneofCase.ToI420) {
              subBuilder.MergeFrom(ToI420);
            }
            input.ReadMessage(subBuilder);
            ToI420 = subBuilder;
            break;
          }
          case 114: {
            global::LiveKit.Proto.ToARGBResponse subBuilder = new global::LiveKit.Proto.ToARGBResponse();
            if (messageCase_ == MessageOneofCase.ToArgb) {
              subBuilder.MergeFrom(ToArgb);
            }
            input.ReadMessage(subBuilder);
            ToArgb = subBuilder;
            break;
          }
          case 122: {
            global::LiveKit.Proto.AllocAudioBufferResponse subBuilder = new global::LiveKit.Proto.AllocAudioBufferResponse();
            if (messageCase_ == MessageOneofCase.AllocAudioBuffer) {
              subBuilder.MergeFrom(AllocAudioBuffer);
            }
            input.ReadMessage(subBuilder);
            AllocAudioBuffer = subBuilder;
            break;
          }
          case 130: {
            global::LiveKit.Proto.NewAudioStreamResponse subBuilder = new global::LiveKit.Proto.NewAudioStreamResponse();
            if (messageCase_ == MessageOneofCase.NewAudioStream) {
              subBuilder.MergeFrom(NewAudioStream);
            }
            input.ReadMessage(subBuilder);
            NewAudioStream = subBuilder;
            break;
          }
          case 138: {
            global::LiveKit.Proto.NewAudioSourceResponse subBuilder = new global::LiveKit.Proto.NewAudioSourceResponse();
            if (messageCase_ == MessageOneofCase.NewAudioSource) {
              subBuilder.MergeFrom(NewAudioSource);
            }
            input.ReadMessage(subBuilder);
            NewAudioSource = subBuilder;
            break;
          }
          case 146: {
            global::LiveKit.Proto.CaptureAudioFrameResponse subBuilder = new global::LiveKit.Proto.CaptureAudioFrameResponse();
            if (messageCase_ == MessageOneofCase.CaptureAudioFrame) {
              subBuilder.MergeFrom(CaptureAudioFrame);
            }
            input.ReadMessage(subBuilder);
            CaptureAudioFrame = subBuilder;
            break;
          }
          case 154: {
            global::LiveKit.Proto.NewAudioResamplerResponse subBuilder = new global::LiveKit.Proto.NewAudioResamplerResponse();
            if (messageCase_ == MessageOneofCase.NewAudioResampler) {
              subBuilder.MergeFrom(NewAudioResampler);
            }
            input.ReadMessage(subBuilder);
            NewAudioResampler = subBuilder;
            break;
          }
          case 162: {
            global::LiveKit.Proto.RemixAndResampleResponse subBuilder = new global::LiveKit.Proto.RemixAndResampleResponse();
            if (messageCase_ == MessageOneofCase.RemixAndResample) {
              subBuilder.MergeFrom(RemixAndResample);
            }
            input.ReadMessage(subBuilder);
            RemixAndResample = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FFIEvent : pb::IMessage<FFIEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FFIEvent> _parser = new pb::MessageParser<FFIEvent>(() => new FFIEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FFIEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIEvent(FFIEvent other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.RoomEvent:
          RoomEvent = other.RoomEvent.Clone();
          break;
        case MessageOneofCase.TrackEvent:
          TrackEvent = other.TrackEvent.Clone();
          break;
        case MessageOneofCase.ParticipantEvent:
          ParticipantEvent = other.ParticipantEvent.Clone();
          break;
        case MessageOneofCase.VideoStreamEvent:
          VideoStreamEvent = other.VideoStreamEvent.Clone();
          break;
        case MessageOneofCase.AudioStreamEvent:
          AudioStreamEvent = other.AudioStreamEvent.Clone();
          break;
        case MessageOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case MessageOneofCase.Dispose:
          Dispose = other.Dispose.Clone();
          break;
        case MessageOneofCase.PublishTrack:
          PublishTrack = other.PublishTrack.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FFIEvent Clone() {
      return new FFIEvent(this);
    }

    /// <summary>Field number for the "room_event" field.</summary>
    public const int RoomEventFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.RoomEvent RoomEvent {
      get { return messageCase_ == MessageOneofCase.RoomEvent ? (global::LiveKit.Proto.RoomEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RoomEvent;
      }
    }

    /// <summary>Field number for the "track_event" field.</summary>
    public const int TrackEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.TrackEvent TrackEvent {
      get { return messageCase_ == MessageOneofCase.TrackEvent ? (global::LiveKit.Proto.TrackEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.TrackEvent;
      }
    }

    /// <summary>Field number for the "participant_event" field.</summary>
    public const int ParticipantEventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ParticipantEvent ParticipantEvent {
      get { return messageCase_ == MessageOneofCase.ParticipantEvent ? (global::LiveKit.Proto.ParticipantEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ParticipantEvent;
      }
    }

    /// <summary>Field number for the "video_stream_event" field.</summary>
    public const int VideoStreamEventFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.VideoStreamEvent VideoStreamEvent {
      get { return messageCase_ == MessageOneofCase.VideoStreamEvent ? (global::LiveKit.Proto.VideoStreamEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.VideoStreamEvent;
      }
    }

    /// <summary>Field number for the "audio_stream_event" field.</summary>
    public const int AudioStreamEventFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.AudioStreamEvent AudioStreamEvent {
      get { return messageCase_ == MessageOneofCase.AudioStreamEvent ? (global::LiveKit.Proto.AudioStreamEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AudioStreamEvent;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.ConnectCallback Connect {
      get { return messageCase_ == MessageOneofCase.Connect ? (global::LiveKit.Proto.ConnectCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "dispose" field.</summary>
    public const int DisposeFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.DisposeCallback Dispose {
      get { return messageCase_ == MessageOneofCase.Dispose ? (global::LiveKit.Proto.DisposeCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Dispose;
      }
    }

    /// <summary>Field number for the "publish_track" field.</summary>
    public const int PublishTrackFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.PublishTrackCallback PublishTrack {
      get { return messageCase_ == MessageOneofCase.PublishTrack ? (global::LiveKit.Proto.PublishTrackCallback) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PublishTrack;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      RoomEvent = 1,
      TrackEvent = 2,
      ParticipantEvent = 3,
      VideoStreamEvent = 4,
      AudioStreamEvent = 5,
      Connect = 6,
      Dispose = 7,
      PublishTrack = 8,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FFIEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FFIEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomEvent, other.RoomEvent)) return false;
      if (!object.Equals(TrackEvent, other.TrackEvent)) return false;
      if (!object.Equals(ParticipantEvent, other.ParticipantEvent)) return false;
      if (!object.Equals(VideoStreamEvent, other.VideoStreamEvent)) return false;
      if (!object.Equals(AudioStreamEvent, other.AudioStreamEvent)) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Dispose, other.Dispose)) return false;
      if (!object.Equals(PublishTrack, other.PublishTrack)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.RoomEvent) hash ^= RoomEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.TrackEvent) hash ^= TrackEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.ParticipantEvent) hash ^= ParticipantEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) hash ^= VideoStreamEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) hash ^= AudioStreamEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (messageCase_ == MessageOneofCase.Dispose) hash ^= Dispose.GetHashCode();
      if (messageCase_ == MessageOneofCase.PublishTrack) hash ^= PublishTrack.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.ParticipantEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(ParticipantEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        output.WriteRawTag(42);
        output.WriteMessage(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(50);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(58);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(PublishTrack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.ParticipantEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(ParticipantEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        output.WriteRawTag(42);
        output.WriteMessage(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        output.WriteRawTag(50);
        output.WriteMessage(Connect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        output.WriteRawTag(58);
        output.WriteMessage(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        output.WriteRawTag(66);
        output.WriteMessage(PublishTrack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.RoomEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomEvent);
      }
      if (messageCase_ == MessageOneofCase.TrackEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrackEvent);
      }
      if (messageCase_ == MessageOneofCase.ParticipantEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParticipantEvent);
      }
      if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioStreamEvent);
      }
      if (messageCase_ == MessageOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (messageCase_ == MessageOneofCase.Dispose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dispose);
      }
      if (messageCase_ == MessageOneofCase.PublishTrack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTrack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FFIEvent other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.RoomEvent:
          if (RoomEvent == null) {
            RoomEvent = new global::LiveKit.Proto.RoomEvent();
          }
          RoomEvent.MergeFrom(other.RoomEvent);
          break;
        case MessageOneofCase.TrackEvent:
          if (TrackEvent == null) {
            TrackEvent = new global::LiveKit.Proto.TrackEvent();
          }
          TrackEvent.MergeFrom(other.TrackEvent);
          break;
        case MessageOneofCase.ParticipantEvent:
          if (ParticipantEvent == null) {
            ParticipantEvent = new global::LiveKit.Proto.ParticipantEvent();
          }
          ParticipantEvent.MergeFrom(other.ParticipantEvent);
          break;
        case MessageOneofCase.VideoStreamEvent:
          if (VideoStreamEvent == null) {
            VideoStreamEvent = new global::LiveKit.Proto.VideoStreamEvent();
          }
          VideoStreamEvent.MergeFrom(other.VideoStreamEvent);
          break;
        case MessageOneofCase.AudioStreamEvent:
          if (AudioStreamEvent == null) {
            AudioStreamEvent = new global::LiveKit.Proto.AudioStreamEvent();
          }
          AudioStreamEvent.MergeFrom(other.AudioStreamEvent);
          break;
        case MessageOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::LiveKit.Proto.ConnectCallback();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case MessageOneofCase.Dispose:
          if (Dispose == null) {
            Dispose = new global::LiveKit.Proto.DisposeCallback();
          }
          Dispose.MergeFrom(other.Dispose);
          break;
        case MessageOneofCase.PublishTrack:
          if (PublishTrack == null) {
            PublishTrack = new global::LiveKit.Proto.PublishTrackCallback();
          }
          PublishTrack.MergeFrom(other.PublishTrack);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LiveKit.Proto.RoomEvent subBuilder = new global::LiveKit.Proto.RoomEvent();
            if (messageCase_ == MessageOneofCase.RoomEvent) {
              subBuilder.MergeFrom(RoomEvent);
            }
            input.ReadMessage(subBuilder);
            RoomEvent = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.TrackEvent subBuilder = new global::LiveKit.Proto.TrackEvent();
            if (messageCase_ == MessageOneofCase.TrackEvent) {
              subBuilder.MergeFrom(TrackEvent);
            }
            input.ReadMessage(subBuilder);
            TrackEvent = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ParticipantEvent subBuilder = new global::LiveKit.Proto.ParticipantEvent();
            if (messageCase_ == MessageOneofCase.ParticipantEvent) {
              subBuilder.MergeFrom(ParticipantEvent);
            }
            input.ReadMessage(subBuilder);
            ParticipantEvent = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.VideoStreamEvent subBuilder = new global::LiveKit.Proto.VideoStreamEvent();
            if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
              subBuilder.MergeFrom(VideoStreamEvent);
            }
            input.ReadMessage(subBuilder);
            VideoStreamEvent = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.AudioStreamEvent subBuilder = new global::LiveKit.Proto.AudioStreamEvent();
            if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
              subBuilder.MergeFrom(AudioStreamEvent);
            }
            input.ReadMessage(subBuilder);
            AudioStreamEvent = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.ConnectCallback subBuilder = new global::LiveKit.Proto.ConnectCallback();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.DisposeCallback subBuilder = new global::LiveKit.Proto.DisposeCallback();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.PublishTrackCallback subBuilder = new global::LiveKit.Proto.PublishTrackCallback();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LiveKit.Proto.RoomEvent subBuilder = new global::LiveKit.Proto.RoomEvent();
            if (messageCase_ == MessageOneofCase.RoomEvent) {
              subBuilder.MergeFrom(RoomEvent);
            }
            input.ReadMessage(subBuilder);
            RoomEvent = subBuilder;
            break;
          }
          case 18: {
            global::LiveKit.Proto.TrackEvent subBuilder = new global::LiveKit.Proto.TrackEvent();
            if (messageCase_ == MessageOneofCase.TrackEvent) {
              subBuilder.MergeFrom(TrackEvent);
            }
            input.ReadMessage(subBuilder);
            TrackEvent = subBuilder;
            break;
          }
          case 26: {
            global::LiveKit.Proto.ParticipantEvent subBuilder = new global::LiveKit.Proto.ParticipantEvent();
            if (messageCase_ == MessageOneofCase.ParticipantEvent) {
              subBuilder.MergeFrom(ParticipantEvent);
            }
            input.ReadMessage(subBuilder);
            ParticipantEvent = subBuilder;
            break;
          }
          case 34: {
            global::LiveKit.Proto.VideoStreamEvent subBuilder = new global::LiveKit.Proto.VideoStreamEvent();
            if (messageCase_ == MessageOneofCase.VideoStreamEvent) {
              subBuilder.MergeFrom(VideoStreamEvent);
            }
            input.ReadMessage(subBuilder);
            VideoStreamEvent = subBuilder;
            break;
          }
          case 42: {
            global::LiveKit.Proto.AudioStreamEvent subBuilder = new global::LiveKit.Proto.AudioStreamEvent();
            if (messageCase_ == MessageOneofCase.AudioStreamEvent) {
              subBuilder.MergeFrom(AudioStreamEvent);
            }
            input.ReadMessage(subBuilder);
            AudioStreamEvent = subBuilder;
            break;
          }
          case 50: {
            global::LiveKit.Proto.ConnectCallback subBuilder = new global::LiveKit.Proto.ConnectCallback();
            if (messageCase_ == MessageOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 58: {
            global::LiveKit.Proto.DisposeCallback subBuilder = new global::LiveKit.Proto.DisposeCallback();
            if (messageCase_ == MessageOneofCase.Dispose) {
              subBuilder.MergeFrom(Dispose);
            }
            input.ReadMessage(subBuilder);
            Dispose = subBuilder;
            break;
          }
          case 66: {
            global::LiveKit.Proto.PublishTrackCallback subBuilder = new global::LiveKit.Proto.PublishTrackCallback();
            if (messageCase_ == MessageOneofCase.PublishTrack) {
              subBuilder.MergeFrom(PublishTrack);
            }
            input.ReadMessage(subBuilder);
            PublishTrack = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Setup the callback where the foreign language can receive events
  /// and responses to asynchronous requests
  /// </summary>
  public sealed partial class InitializeRequest : pb::IMessage<InitializeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeRequest> _parser = new pb::MessageParser<InitializeRequest>(() => new InitializeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitializeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeRequest(InitializeRequest other) : this() {
      eventCallbackPtr_ = other.eventCallbackPtr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeRequest Clone() {
      return new InitializeRequest(this);
    }

    /// <summary>Field number for the "event_callback_ptr" field.</summary>
    public const int EventCallbackPtrFieldNumber = 1;
    private ulong eventCallbackPtr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EventCallbackPtr {
      get { return eventCallbackPtr_; }
      set {
        eventCallbackPtr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitializeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitializeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventCallbackPtr != other.EventCallbackPtr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EventCallbackPtr != 0UL) hash ^= EventCallbackPtr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventCallbackPtr != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(EventCallbackPtr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventCallbackPtr != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(EventCallbackPtr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EventCallbackPtr != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EventCallbackPtr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitializeRequest other) {
      if (other == null) {
        return;
      }
      if (other.EventCallbackPtr != 0UL) {
        EventCallbackPtr = other.EventCallbackPtr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventCallbackPtr = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EventCallbackPtr = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitializeResponse : pb::IMessage<InitializeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeResponse> _parser = new pb::MessageParser<InitializeResponse>(() => new InitializeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitializeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeResponse(InitializeResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeResponse Clone() {
      return new InitializeResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitializeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitializeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitializeResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Stop all rooms synchronously (Do we need async here?).
  /// e.g: This is used for the Unity Editor after each assemblies reload.
  /// </summary>
  public sealed partial class DisposeRequest : pb::IMessage<DisposeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeRequest> _parser = new pb::MessageParser<DisposeRequest>(() => new DisposeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest(DisposeRequest other) : this() {
      async_ = other.async_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeRequest Clone() {
      return new DisposeRequest(this);
    }

    /// <summary>Field number for the "async" field.</summary>
    public const int AsyncFieldNumber = 1;
    private bool async_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Async {
      get { return async_; }
      set {
        async_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Async != other.Async) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Async != false) hash ^= Async.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Async != false) {
        output.WriteRawTag(8);
        output.WriteBool(Async);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Async != false) {
        output.WriteRawTag(8);
        output.WriteBool(Async);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Async != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Async != false) {
        Async = other.Async;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Async = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Async = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DisposeResponse : pb::IMessage<DisposeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeResponse> _parser = new pb::MessageParser<DisposeResponse>(() => new DisposeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse(DisposeResponse other) : this() {
      asyncId_ = other.asyncId_ != null ? other.asyncId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeResponse Clone() {
      return new DisposeResponse(this);
    }

    /// <summary>Field number for the "async_id" field.</summary>
    public const int AsyncIdFieldNumber = 1;
    private global::LiveKit.Proto.FFIAsyncId asyncId_;
    /// <summary>
    /// None if sync
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.FFIAsyncId AsyncId {
      get { return asyncId_; }
      set {
        asyncId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AsyncId, other.AsyncId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (asyncId_ != null) hash ^= AsyncId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (asyncId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (asyncId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (asyncId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AsyncId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeResponse other) {
      if (other == null) {
        return;
      }
      if (other.asyncId_ != null) {
        if (asyncId_ == null) {
          AsyncId = new global::LiveKit.Proto.FFIAsyncId();
        }
        AsyncId.MergeFrom(other.AsyncId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (asyncId_ == null) {
              AsyncId = new global::LiveKit.Proto.FFIAsyncId();
            }
            input.ReadMessage(AsyncId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (asyncId_ == null) {
              AsyncId = new global::LiveKit.Proto.FFIAsyncId();
            }
            input.ReadMessage(AsyncId);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DisposeCallback : pb::IMessage<DisposeCallback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisposeCallback> _parser = new pb::MessageParser<DisposeCallback>(() => new DisposeCallback());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisposeCallback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.FfiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback(DisposeCallback other) : this() {
      asyncId_ = other.asyncId_ != null ? other.asyncId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisposeCallback Clone() {
      return new DisposeCallback(this);
    }

    /// <summary>Field number for the "async_id" field.</summary>
    public const int AsyncIdFieldNumber = 1;
    private global::LiveKit.Proto.FFIAsyncId asyncId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LiveKit.Proto.FFIAsyncId AsyncId {
      get { return asyncId_; }
      set {
        asyncId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisposeCallback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisposeCallback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AsyncId, other.AsyncId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (asyncId_ != null) hash ^= AsyncId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (asyncId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (asyncId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AsyncId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (asyncId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AsyncId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisposeCallback other) {
      if (other == null) {
        return;
      }
      if (other.asyncId_ != null) {
        if (asyncId_ == null) {
          AsyncId = new global::LiveKit.Proto.FFIAsyncId();
        }
        AsyncId.MergeFrom(other.AsyncId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (asyncId_ == null) {
              AsyncId = new global::LiveKit.Proto.FFIAsyncId();
            }
            input.ReadMessage(AsyncId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (asyncId_ == null) {
              AsyncId = new global::LiveKit.Proto.FFIAsyncId();
            }
            input.ReadMessage(AsyncId);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
