name: CI
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
jobs:
  test:
    name: Test (${{ matrix.unityVersion }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion: [6000.1.2f1]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      # Required when using package mode, see open issue:
      # https://github.com/game-ci/unity-test-runner/issues/223
      - name: Move Into Subdirectory
        shell: bash
        run: |
          mkdir root
          shopt -s dotglob extglob
          mv !(root) root/
      # Required for E2E tests
      - name: Install LiveKit Server
        run: curl -sSL https://get.livekit.io | bash
      - name: Run LiveKit Server
        run: livekit-server --dev &
      - name: Run Tests
        uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: root
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: Test Results (${{ matrix.unityVersion }})
          packageMode: true
          useHostNetwork: true
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Test results (${{ matrix.unityVersion }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}
  build:
   env:
      UNITY_PROJECT_PATH: Samples~/Basic
   name: Build (${{ matrix.targetPlatform }}, ${{ matrix.unityVersion }})
   runs-on: ubuntu-latest
   strategy:
      fail-fast: false
      matrix:
        unityVersion: [6000.1.2f1]
        targetPlatform: [iOS, Android]
   steps:
     - name: Checkout
       uses: actions/checkout@v4
       with:
         lfs: true
     - uses: actions/cache@v3
       with:
         path: ${{ env.UNITY_PROJECT_PATH }}/Library
         key: Library-${{ env.UNITY_PROJECT_PATH }}-${{ matrix.targetPlatform }}-${{ hashFiles(env.UNITY_PROJECT_PATH) }}
         restore-keys: |
           Library-${{ env.UNITY_PROJECT_PATH }}-${{ matrix.targetPlatform }}-
           Library-${{ env.UNITY_PROJECT_PATH }}-
           Library-
     - name: Build
       uses: game-ci/unity-builder@v4
       env:
         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
       with:
         projectPath: ${{ env.UNITY_PROJECT_PATH }}
         unityVersion: ${{ matrix.unityVersion }}
         targetPlatform: ${{ matrix.targetPlatform }}
     - name: Upload Build
       uses: actions/upload-artifact@v4
       with:
        name: Build-${{ matrix.targetPlatform }}
        path: build/${{ matrix.targetPlatform }}
